
DIO_lCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000072c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000007a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000007  00800060  00800060  000007a0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000007a0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000007d0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e8  00000000  00000000  0000080c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001e15  00000000  00000000  000009f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c98  00000000  00000000  00002809  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ff7  00000000  00000000  000034a1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000041c  00000000  00000000  00004498  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000878  00000000  00000000  000048b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ed9  00000000  00000000  0000512c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000168  00000000  00000000  00006005  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 1d 03 	jmp	0x63a	; 0x63a <__vector_1>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 6b 03 	jmp	0x6d6	; 0x6d6 <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 ec 01 	jmp	0x3d8	; 0x3d8 <__vector_16>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e2       	ldi	r30, 0x2C	; 44
  68:	f7 e0       	ldi	r31, 0x07	; 7
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a7 36       	cpi	r26, 0x67	; 103
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 c2 01 	call	0x384	; 0x384 <main>
  8a:	0c 94 94 03 	jmp	0x728	; 0x728 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <SmartHome_App_Start_Slave>:

void SmartHome_App_Start_Slave()


{
		ADC_Intialize();
  92:	0e 94 c7 01 	call	0x38e	; 0x38e <ADC_Intialize>
		LCD_Intialize();
  96:	0e 94 8a 01 	call	0x314	; 0x314 <LCD_Intialize>
		DIO_SetPortDirection(PORTD,Output);
  9a:	61 e0       	ldi	r22, 0x01	; 1
  9c:	83 e0       	ldi	r24, 0x03	; 3
  9e:	0e 94 15 02 	call	0x42a	; 0x42a <DIO_SetPortDirection>
		DIO_SetPinDirection(PORTA,0,Input);//TEMPARTURE SENSOR
  a2:	40 e0       	ldi	r20, 0x00	; 0
  a4:	60 e0       	ldi	r22, 0x00	; 0
  a6:	80 e0       	ldi	r24, 0x00	; 0
  a8:	0e 94 3d 02 	call	0x47a	; 0x47a <DIO_SetPinDirection>
		DIO_SetPortDirection(PORTC,Output);
  ac:	61 e0       	ldi	r22, 0x01	; 1
  ae:	82 e0       	ldi	r24, 0x02	; 2
  b0:	0e 94 15 02 	call	0x42a	; 0x42a <DIO_SetPortDirection>
		SPI_Slave_Intialize();
  b4:	0e 94 46 03 	call	0x68c	; 0x68c <SPI_Slave_Intialize>
	uint8 Set_temp = 0;
	
	while(1)
	{
		
		Recieved=SPI_Slave_Recieve();
  b8:	0e 94 65 03 	call	0x6ca	; 0x6ca <SPI_Slave_Recieve>
		
		switch(Recieved)
  bc:	83 30       	cpi	r24, 0x03	; 3
  be:	91 f1       	breq	.+100    	; 0x124 <SmartHome_App_Start_Slave+0x92>
  c0:	28 f4       	brcc	.+10     	; 0xcc <SmartHome_App_Start_Slave+0x3a>
  c2:	81 30       	cpi	r24, 0x01	; 1
  c4:	59 f0       	breq	.+22     	; 0xdc <SmartHome_App_Start_Slave+0x4a>
  c6:	82 30       	cpi	r24, 0x02	; 2
  c8:	e9 f0       	breq	.+58     	; 0x104 <SmartHome_App_Start_Slave+0x72>
  ca:	f6 cf       	rjmp	.-20     	; 0xb8 <SmartHome_App_Start_Slave+0x26>
  cc:	85 30       	cpi	r24, 0x05	; 5
  ce:	09 f4       	brne	.+2      	; 0xd2 <SmartHome_App_Start_Slave+0x40>
  d0:	4f c0       	rjmp	.+158    	; 0x170 <SmartHome_App_Start_Slave+0xde>
  d2:	d8 f1       	brcs	.+118    	; 0x14a <SmartHome_App_Start_Slave+0xb8>
  d4:	86 30       	cpi	r24, 0x06	; 6
  d6:	09 f4       	brne	.+2      	; 0xda <SmartHome_App_Start_Slave+0x48>
  d8:	5e c0       	rjmp	.+188    	; 0x196 <SmartHome_App_Start_Slave+0x104>
  da:	ee cf       	rjmp	.-36     	; 0xb8 <SmartHome_App_Start_Slave+0x26>
		
		{
			case 1 : //room 1
			Recieved=SPI_Slave_Recieve();
  dc:	0e 94 65 03 	call	0x6ca	; 0x6ca <SPI_Slave_Recieve>
			if(Recieved=='N')
  e0:	8e 34       	cpi	r24, 0x4E	; 78
  e2:	31 f4       	brne	.+12     	; 0xf0 <SmartHome_App_Start_Slave+0x5e>
				DIO_SetPinValue(PORTD,7,HIGH);
  e4:	41 e0       	ldi	r20, 0x01	; 1
  e6:	67 e0       	ldi	r22, 0x07	; 7
  e8:	83 e0       	ldi	r24, 0x03	; 3
  ea:	0e 94 ad 02 	call	0x55a	; 0x55a <DIO_SetPinValue>
  ee:	07 c0       	rjmp	.+14     	; 0xfe <SmartHome_App_Start_Slave+0x6c>
			else if(Recieved=='F')
  f0:	86 34       	cpi	r24, 0x46	; 70
  f2:	29 f4       	brne	.+10     	; 0xfe <SmartHome_App_Start_Slave+0x6c>
				DIO_SetPinValue(PORTD,7,LOW);
  f4:	40 e0       	ldi	r20, 0x00	; 0
  f6:	67 e0       	ldi	r22, 0x07	; 7
  f8:	83 e0       	ldi	r24, 0x03	; 3
  fa:	0e 94 ad 02 	call	0x55a	; 0x55a <DIO_SetPinValue>
			Recieved=SPI_Slave_Recieve();
  fe:	0e 94 65 03 	call	0x6ca	; 0x6ca <SPI_Slave_Recieve>
		
				break;	
 102:	da cf       	rjmp	.-76     	; 0xb8 <SmartHome_App_Start_Slave+0x26>
			
			
			case 2 : //room 2
			Recieved=SPI_Slave_Recieve();
 104:	0e 94 65 03 	call	0x6ca	; 0x6ca <SPI_Slave_Recieve>
			if(Recieved=='N')
 108:	8e 34       	cpi	r24, 0x4E	; 78
 10a:	31 f4       	brne	.+12     	; 0x118 <SmartHome_App_Start_Slave+0x86>
				DIO_SetPinValue(PORTD,6,HIGH);
 10c:	41 e0       	ldi	r20, 0x01	; 1
 10e:	66 e0       	ldi	r22, 0x06	; 6
 110:	83 e0       	ldi	r24, 0x03	; 3
 112:	0e 94 ad 02 	call	0x55a	; 0x55a <DIO_SetPinValue>
 116:	d0 cf       	rjmp	.-96     	; 0xb8 <SmartHome_App_Start_Slave+0x26>
			else 
				DIO_SetPinValue(PORTD,6,LOW);
 118:	40 e0       	ldi	r20, 0x00	; 0
 11a:	66 e0       	ldi	r22, 0x06	; 6
 11c:	83 e0       	ldi	r24, 0x03	; 3
 11e:	0e 94 ad 02 	call	0x55a	; 0x55a <DIO_SetPinValue>
 122:	ca cf       	rjmp	.-108    	; 0xb8 <SmartHome_App_Start_Slave+0x26>
	
			break;				
			
			
			case 3 : //room 3
			Recieved=SPI_Slave_Recieve();
 124:	0e 94 65 03 	call	0x6ca	; 0x6ca <SPI_Slave_Recieve>
			if(Recieved=='N')
 128:	8e 34       	cpi	r24, 0x4E	; 78
 12a:	31 f4       	brne	.+12     	; 0x138 <SmartHome_App_Start_Slave+0xa6>
				DIO_SetPinValue(PORTD,5,HIGH);
 12c:	41 e0       	ldi	r20, 0x01	; 1
 12e:	65 e0       	ldi	r22, 0x05	; 5
 130:	83 e0       	ldi	r24, 0x03	; 3
 132:	0e 94 ad 02 	call	0x55a	; 0x55a <DIO_SetPinValue>
 136:	c0 cf       	rjmp	.-128    	; 0xb8 <SmartHome_App_Start_Slave+0x26>
			else if(Recieved=='F')
 138:	86 34       	cpi	r24, 0x46	; 70
 13a:	09 f0       	breq	.+2      	; 0x13e <SmartHome_App_Start_Slave+0xac>
 13c:	bd cf       	rjmp	.-134    	; 0xb8 <SmartHome_App_Start_Slave+0x26>
				DIO_SetPinValue(PORTD,5,LOW);
 13e:	40 e0       	ldi	r20, 0x00	; 0
 140:	65 e0       	ldi	r22, 0x05	; 5
 142:	83 e0       	ldi	r24, 0x03	; 3
 144:	0e 94 ad 02 	call	0x55a	; 0x55a <DIO_SetPinValue>
 148:	b7 cf       	rjmp	.-146    	; 0xb8 <SmartHome_App_Start_Slave+0x26>
		
			break;				
						
			case 4 : //room 4
			Recieved=SPI_Slave_Recieve();
 14a:	0e 94 65 03 	call	0x6ca	; 0x6ca <SPI_Slave_Recieve>
			if(Recieved=='N')
 14e:	8e 34       	cpi	r24, 0x4E	; 78
 150:	31 f4       	brne	.+12     	; 0x15e <SmartHome_App_Start_Slave+0xcc>
				DIO_SetPinValue(PORTD,4,HIGH);
 152:	41 e0       	ldi	r20, 0x01	; 1
 154:	64 e0       	ldi	r22, 0x04	; 4
 156:	83 e0       	ldi	r24, 0x03	; 3
 158:	0e 94 ad 02 	call	0x55a	; 0x55a <DIO_SetPinValue>
 15c:	ad cf       	rjmp	.-166    	; 0xb8 <SmartHome_App_Start_Slave+0x26>
			else if(Recieved=='F')
 15e:	86 34       	cpi	r24, 0x46	; 70
 160:	09 f0       	breq	.+2      	; 0x164 <SmartHome_App_Start_Slave+0xd2>
 162:	aa cf       	rjmp	.-172    	; 0xb8 <SmartHome_App_Start_Slave+0x26>
				DIO_SetPinValue(PORTD,4,LOW);
 164:	40 e0       	ldi	r20, 0x00	; 0
 166:	64 e0       	ldi	r22, 0x04	; 4
 168:	83 e0       	ldi	r24, 0x03	; 3
 16a:	0e 94 ad 02 	call	0x55a	; 0x55a <DIO_SetPinValue>
 16e:	a4 cf       	rjmp	.-184    	; 0xb8 <SmartHome_App_Start_Slave+0x26>
			
			break;
			//TV
			case 5:
			Recieved=SPI_Slave_Recieve();
 170:	0e 94 65 03 	call	0x6ca	; 0x6ca <SPI_Slave_Recieve>
			if(Recieved=='N')
 174:	8e 34       	cpi	r24, 0x4E	; 78
 176:	31 f4       	brne	.+12     	; 0x184 <SmartHome_App_Start_Slave+0xf2>
			DIO_SetPinValue(PORTD,3,HIGH);
 178:	41 e0       	ldi	r20, 0x01	; 1
 17a:	63 e0       	ldi	r22, 0x03	; 3
 17c:	83 e0       	ldi	r24, 0x03	; 3
 17e:	0e 94 ad 02 	call	0x55a	; 0x55a <DIO_SetPinValue>
 182:	9a cf       	rjmp	.-204    	; 0xb8 <SmartHome_App_Start_Slave+0x26>
			else if(Recieved=='F')
 184:	86 34       	cpi	r24, 0x46	; 70
 186:	09 f0       	breq	.+2      	; 0x18a <SmartHome_App_Start_Slave+0xf8>
 188:	97 cf       	rjmp	.-210    	; 0xb8 <SmartHome_App_Start_Slave+0x26>
			DIO_SetPinValue(PORTD,3,LOW);
 18a:	40 e0       	ldi	r20, 0x00	; 0
 18c:	63 e0       	ldi	r22, 0x03	; 3
 18e:	83 e0       	ldi	r24, 0x03	; 3
 190:	0e 94 ad 02 	call	0x55a	; 0x55a <DIO_SetPinValue>
 194:	91 cf       	rjmp	.-222    	; 0xb8 <SmartHome_App_Start_Slave+0x26>
			break;
			//CONDITIONER
			
			case 6 :
			
			Recieved=SPI_Slave_Recieve();
 196:	0e 94 65 03 	call	0x6ca	; 0x6ca <SPI_Slave_Recieve>
			
			if(Recieved=='C') //C FOR CONTROL (ON OR OFF)
 19a:	83 34       	cpi	r24, 0x43	; 67
 19c:	81 f4       	brne	.+32     	; 0x1be <SmartHome_App_Start_Slave+0x12c>
			{
				
				Recieved=SPI_Slave_Recieve();
 19e:	0e 94 65 03 	call	0x6ca	; 0x6ca <SPI_Slave_Recieve>
				
				if(Recieved=='N')
 1a2:	8e 34       	cpi	r24, 0x4E	; 78
 1a4:	31 f4       	brne	.+12     	; 0x1b2 <SmartHome_App_Start_Slave+0x120>
					DIO_SetPinValue(PORTD,2,HIGH);
 1a6:	41 e0       	ldi	r20, 0x01	; 1
 1a8:	62 e0       	ldi	r22, 0x02	; 2
 1aa:	83 e0       	ldi	r24, 0x03	; 3
 1ac:	0e 94 ad 02 	call	0x55a	; 0x55a <DIO_SetPinValue>
 1b0:	83 cf       	rjmp	.-250    	; 0xb8 <SmartHome_App_Start_Slave+0x26>
				else
					DIO_SetPinValue(PORTD,2,LOW);
 1b2:	40 e0       	ldi	r20, 0x00	; 0
 1b4:	62 e0       	ldi	r22, 0x02	; 2
 1b6:	83 e0       	ldi	r24, 0x03	; 3
 1b8:	0e 94 ad 02 	call	0x55a	; 0x55a <DIO_SetPinValue>
 1bc:	7d cf       	rjmp	.-262    	; 0xb8 <SmartHome_App_Start_Slave+0x26>
			}
				
			else if(Recieved=='S')// FOR adjust the temprature
 1be:	83 35       	cpi	r24, 0x53	; 83
 1c0:	09 f0       	breq	.+2      	; 0x1c4 <SmartHome_App_Start_Slave+0x132>
 1c2:	7a cf       	rjmp	.-268    	; 0xb8 <SmartHome_App_Start_Slave+0x26>
			{
					
					Recieved=SPI_Slave_Recieve();
 1c4:	0e 94 65 03 	call	0x6ca	; 0x6ca <SPI_Slave_Recieve>
					
					Set_temp=(Recieved-'0')*10;
 1c8:	c8 2f       	mov	r28, r24
 1ca:	d0 e0       	ldi	r29, 0x00	; 0
 1cc:	e0 97       	sbiw	r28, 0x30	; 48
 1ce:	cc 0f       	add	r28, r28
 1d0:	8c 2f       	mov	r24, r28
 1d2:	88 0f       	add	r24, r24
 1d4:	88 0f       	add	r24, r24
 1d6:	c8 0f       	add	r28, r24
					Recieved=SPI_Slave_Recieve();
 1d8:	0e 94 65 03 	call	0x6ca	; 0x6ca <SPI_Slave_Recieve>
					Set_temp+=(Recieved-'0');	
 1dc:	8c 0f       	add	r24, r28
 1de:	c0 ed       	ldi	r28, 0xD0	; 208
 1e0:	c8 0f       	add	r28, r24
					ADC_StartConversion(ADC_Channel_0);
 1e2:	80 e0       	ldi	r24, 0x00	; 0
 1e4:	0e 94 df 01 	call	0x3be	; 0x3be <ADC_StartConversion>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1e8:	87 ea       	ldi	r24, 0xA7	; 167
 1ea:	91 e6       	ldi	r25, 0x61	; 97
 1ec:	01 97       	sbiw	r24, 0x01	; 1
 1ee:	f1 f7       	brne	.-4      	; 0x1ec <SmartHome_App_Start_Slave+0x15a>
 1f0:	00 c0       	rjmp	.+0      	; 0x1f2 <SmartHome_App_Start_Slave+0x160>
 1f2:	00 00       	nop
					_delay_ms(100);
					uint16 RESULT =ADC_GetResult();
 1f4:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <ADC_GetResult>
					
					//CALCULATIONS TO MAKE THE ANLOG RESULT ACCURATE OF SENSOR TEMPRATURE
					if((RESULT<25)&&(RESULT>6))
 1f8:	9c 01       	movw	r18, r24
 1fa:	27 50       	subi	r18, 0x07	; 7
 1fc:	31 09       	sbc	r19, r1
 1fe:	22 31       	cpi	r18, 0x12	; 18
 200:	31 05       	cpc	r19, r1
 202:	08 f4       	brcc	.+2      	; 0x206 <SmartHome_App_Start_Slave+0x174>
						RESULT--;
 204:	01 97       	sbiw	r24, 0x01	; 1
					if (RESULT<43&&RESULT>=25)
 206:	9c 01       	movw	r18, r24
 208:	29 51       	subi	r18, 0x19	; 25
 20a:	31 09       	sbc	r19, r1
 20c:	22 31       	cpi	r18, 0x12	; 18
 20e:	31 05       	cpc	r19, r1
 210:	08 f4       	brcc	.+2      	; 0x214 <SmartHome_App_Start_Slave+0x182>
						RESULT-=2;
 212:	02 97       	sbiw	r24, 0x02	; 2
					if(RESULT>=43)
 214:	8b 32       	cpi	r24, 0x2B	; 43
 216:	91 05       	cpc	r25, r1
 218:	08 f0       	brcs	.+2      	; 0x21c <SmartHome_App_Start_Slave+0x18a>
						RESULT-=3;
 21a:	03 97       	sbiw	r24, 0x03	; 3
						
					Set_temp*=2;	
 21c:	cc 0f       	add	r28, r28
					//THE CALCULATIONS  ENDS HERE
					if (RESULT>Set_temp)
 21e:	2c 2f       	mov	r18, r28
 220:	30 e0       	ldi	r19, 0x00	; 0
 222:	28 17       	cp	r18, r24
 224:	39 07       	cpc	r19, r25
 226:	30 f4       	brcc	.+12     	; 0x234 <SmartHome_App_Start_Slave+0x1a2>
					{
						DIO_SetPinValue(PORTD,PIN2,HIGH);
 228:	41 e0       	ldi	r20, 0x01	; 1
 22a:	62 e0       	ldi	r22, 0x02	; 2
 22c:	83 e0       	ldi	r24, 0x03	; 3
 22e:	0e 94 ad 02 	call	0x55a	; 0x55a <DIO_SetPinValue>
 232:	42 cf       	rjmp	.-380    	; 0xb8 <SmartHome_App_Start_Slave+0x26>
						
					}
					else
					{
						DIO_SetPinValue(PORTD,PIN2,LOW);
 234:	40 e0       	ldi	r20, 0x00	; 0
 236:	62 e0       	ldi	r22, 0x02	; 2
 238:	83 e0       	ldi	r24, 0x03	; 3
 23a:	0e 94 ad 02 	call	0x55a	; 0x55a <DIO_SetPinValue>
 23e:	3c cf       	rjmp	.-392    	; 0xb8 <SmartHome_App_Start_Slave+0x26>

00000240 <LCD_WriteCmd>:


static uint8 InitStepFinished = 0;

void LCD_WriteCmd(uint8 Cmd)
{
 240:	cf 93       	push	r28
 242:	c8 2f       	mov	r28, r24
	DIO_SetPinValue(PORTC,PIN0,LOW);//RS and R/W should be low to write command
 244:	40 e0       	ldi	r20, 0x00	; 0
 246:	60 e0       	ldi	r22, 0x00	; 0
 248:	82 e0       	ldi	r24, 0x02	; 2
 24a:	0e 94 ad 02 	call	0x55a	; 0x55a <DIO_SetPinValue>
	DIO_SetPinValue(PORTC,PIN1,LOW);
 24e:	40 e0       	ldi	r20, 0x00	; 0
 250:	61 e0       	ldi	r22, 0x01	; 1
 252:	82 e0       	ldi	r24, 0x02	; 2
 254:	0e 94 ad 02 	call	0x55a	; 0x55a <DIO_SetPinValue>
	
	
	DIO_SetPinValue(PORTC,PIN4,GetBIT(Cmd,4));
 258:	c4 fb       	bst	r28, 4
 25a:	44 27       	eor	r20, r20
 25c:	40 f9       	bld	r20, 0
 25e:	64 e0       	ldi	r22, 0x04	; 4
 260:	82 e0       	ldi	r24, 0x02	; 2
 262:	0e 94 ad 02 	call	0x55a	; 0x55a <DIO_SetPinValue>
	DIO_SetPinValue(PORTC,PIN5,GetBIT(Cmd,5));
 266:	c5 fb       	bst	r28, 5
 268:	44 27       	eor	r20, r20
 26a:	40 f9       	bld	r20, 0
 26c:	65 e0       	ldi	r22, 0x05	; 5
 26e:	82 e0       	ldi	r24, 0x02	; 2
 270:	0e 94 ad 02 	call	0x55a	; 0x55a <DIO_SetPinValue>
	DIO_SetPinValue(PORTC,PIN6,GetBIT(Cmd,6));
 274:	c6 fb       	bst	r28, 6
 276:	44 27       	eor	r20, r20
 278:	40 f9       	bld	r20, 0
 27a:	66 e0       	ldi	r22, 0x06	; 6
 27c:	82 e0       	ldi	r24, 0x02	; 2
 27e:	0e 94 ad 02 	call	0x55a	; 0x55a <DIO_SetPinValue>
	DIO_SetPinValue(PORTC,PIN7,GetBIT(Cmd,7));
 282:	4c 2f       	mov	r20, r28
 284:	44 1f       	adc	r20, r20
 286:	44 27       	eor	r20, r20
 288:	44 1f       	adc	r20, r20
 28a:	67 e0       	ldi	r22, 0x07	; 7
 28c:	82 e0       	ldi	r24, 0x02	; 2
 28e:	0e 94 ad 02 	call	0x55a	; 0x55a <DIO_SetPinValue>
	
	//delay and reading by down Edge
	
					//
					DIO_SetPinValue(PORTC,PIN2,HIGH);
 292:	41 e0       	ldi	r20, 0x01	; 1
 294:	62 e0       	ldi	r22, 0x02	; 2
 296:	82 e0       	ldi	r24, 0x02	; 2
 298:	0e 94 ad 02 	call	0x55a	; 0x55a <DIO_SetPinValue>
 29c:	83 ec       	ldi	r24, 0xC3	; 195
 29e:	99 e0       	ldi	r25, 0x09	; 9
 2a0:	01 97       	sbiw	r24, 0x01	; 1
 2a2:	f1 f7       	brne	.-4      	; 0x2a0 <LCD_WriteCmd+0x60>
 2a4:	00 c0       	rjmp	.+0      	; 0x2a6 <LCD_WriteCmd+0x66>
 2a6:	00 00       	nop
					_delay_ms(1);                       //delay for reading block
					DIO_SetPinValue(PORTC,PIN2,LOW);
 2a8:	40 e0       	ldi	r20, 0x00	; 0
 2aa:	62 e0       	ldi	r22, 0x02	; 2
 2ac:	82 e0       	ldi	r24, 0x02	; 2
 2ae:	0e 94 ad 02 	call	0x55a	; 0x55a <DIO_SetPinValue>
	
					//
	if(InitStepFinished)
 2b2:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 2b6:	88 23       	and	r24, r24
 2b8:	59 f1       	breq	.+86     	; 0x310 <LCD_WriteCmd+0xd0>
	{
		
		DIO_SetPinValue(PORTC,PIN4,GetBIT(Cmd,0));
 2ba:	4c 2f       	mov	r20, r28
 2bc:	41 70       	andi	r20, 0x01	; 1
 2be:	64 e0       	ldi	r22, 0x04	; 4
 2c0:	82 e0       	ldi	r24, 0x02	; 2
 2c2:	0e 94 ad 02 	call	0x55a	; 0x55a <DIO_SetPinValue>
		DIO_SetPinValue(PORTC,PIN5,GetBIT(Cmd,1));
 2c6:	c1 fb       	bst	r28, 1
 2c8:	44 27       	eor	r20, r20
 2ca:	40 f9       	bld	r20, 0
 2cc:	65 e0       	ldi	r22, 0x05	; 5
 2ce:	82 e0       	ldi	r24, 0x02	; 2
 2d0:	0e 94 ad 02 	call	0x55a	; 0x55a <DIO_SetPinValue>
		DIO_SetPinValue(PORTC,PIN6,GetBIT(Cmd,2));
 2d4:	c2 fb       	bst	r28, 2
 2d6:	44 27       	eor	r20, r20
 2d8:	40 f9       	bld	r20, 0
 2da:	66 e0       	ldi	r22, 0x06	; 6
 2dc:	82 e0       	ldi	r24, 0x02	; 2
 2de:	0e 94 ad 02 	call	0x55a	; 0x55a <DIO_SetPinValue>
		DIO_SetPinValue(PORTC,PIN7,GetBIT(Cmd,3));
 2e2:	c3 fb       	bst	r28, 3
 2e4:	44 27       	eor	r20, r20
 2e6:	40 f9       	bld	r20, 0
 2e8:	67 e0       	ldi	r22, 0x07	; 7
 2ea:	82 e0       	ldi	r24, 0x02	; 2
 2ec:	0e 94 ad 02 	call	0x55a	; 0x55a <DIO_SetPinValue>

		//delay and reading by down Edge
		
					//
					DIO_SetPinValue(PORTC,PIN2,HIGH);
 2f0:	41 e0       	ldi	r20, 0x01	; 1
 2f2:	62 e0       	ldi	r22, 0x02	; 2
 2f4:	82 e0       	ldi	r24, 0x02	; 2
 2f6:	0e 94 ad 02 	call	0x55a	; 0x55a <DIO_SetPinValue>
 2fa:	83 ec       	ldi	r24, 0xC3	; 195
 2fc:	99 e0       	ldi	r25, 0x09	; 9
 2fe:	01 97       	sbiw	r24, 0x01	; 1
 300:	f1 f7       	brne	.-4      	; 0x2fe <LCD_WriteCmd+0xbe>
 302:	00 c0       	rjmp	.+0      	; 0x304 <LCD_WriteCmd+0xc4>
 304:	00 00       	nop
					_delay_ms(1);                       //delay for reading block
					DIO_SetPinValue(PORTC,PIN2,LOW);
 306:	40 e0       	ldi	r20, 0x00	; 0
 308:	62 e0       	ldi	r22, 0x02	; 2
 30a:	82 e0       	ldi	r24, 0x02	; 2
 30c:	0e 94 ad 02 	call	0x55a	; 0x55a <DIO_SetPinValue>
		
					//
	}
	
	
}
 310:	cf 91       	pop	r28
 312:	08 95       	ret

00000314 <LCD_Intialize>:
void LCD_Intialize()
{
	DIO_SetPortDirection(PORTC,Output);
 314:	61 e0       	ldi	r22, 0x01	; 1
 316:	82 e0       	ldi	r24, 0x02	; 2
 318:	0e 94 15 02 	call	0x42a	; 0x42a <DIO_SetPortDirection>
 31c:	2f e5       	ldi	r18, 0x5F	; 95
 31e:	8a ee       	ldi	r24, 0xEA	; 234
 320:	90 e0       	ldi	r25, 0x00	; 0
 322:	21 50       	subi	r18, 0x01	; 1
 324:	80 40       	sbci	r24, 0x00	; 0
 326:	90 40       	sbci	r25, 0x00	; 0
 328:	e1 f7       	brne	.-8      	; 0x322 <LCD_Intialize+0xe>
 32a:	00 c0       	rjmp	.+0      	; 0x32c <LCD_Intialize+0x18>
 32c:	00 00       	nop
	_delay_ms(30);
	LCD_WriteCmd(0x20);///intialize orders
 32e:	80 e2       	ldi	r24, 0x20	; 32
 330:	0e 94 20 01 	call	0x240	; 0x240 <LCD_WriteCmd>
	LCD_WriteCmd(0x20);
 334:	80 e2       	ldi	r24, 0x20	; 32
 336:	0e 94 20 01 	call	0x240	; 0x240 <LCD_WriteCmd>
	LCD_WriteCmd(0x80);
 33a:	80 e8       	ldi	r24, 0x80	; 128
 33c:	0e 94 20 01 	call	0x240	; 0x240 <LCD_WriteCmd>
 340:	83 ec       	ldi	r24, 0xC3	; 195
 342:	99 e0       	ldi	r25, 0x09	; 9
 344:	01 97       	sbiw	r24, 0x01	; 1
 346:	f1 f7       	brne	.-4      	; 0x344 <LCD_Intialize+0x30>
 348:	00 c0       	rjmp	.+0      	; 0x34a <LCD_Intialize+0x36>
 34a:	00 00       	nop
	_delay_ms(1);
	LCD_WriteCmd(0x00);
 34c:	80 e0       	ldi	r24, 0x00	; 0
 34e:	0e 94 20 01 	call	0x240	; 0x240 <LCD_WriteCmd>
	LCD_WriteCmd(0xf0);
 352:	80 ef       	ldi	r24, 0xF0	; 240
 354:	0e 94 20 01 	call	0x240	; 0x240 <LCD_WriteCmd>
 358:	83 ec       	ldi	r24, 0xC3	; 195
 35a:	99 e0       	ldi	r25, 0x09	; 9
 35c:	01 97       	sbiw	r24, 0x01	; 1
 35e:	f1 f7       	brne	.-4      	; 0x35c <LCD_Intialize+0x48>
 360:	00 c0       	rjmp	.+0      	; 0x362 <LCD_Intialize+0x4e>
 362:	00 00       	nop
	_delay_ms(1);
	LCD_WriteCmd(0x00);
 364:	80 e0       	ldi	r24, 0x00	; 0
 366:	0e 94 20 01 	call	0x240	; 0x240 <LCD_WriteCmd>
	LCD_WriteCmd(0x10);
 36a:	80 e1       	ldi	r24, 0x10	; 16
 36c:	0e 94 20 01 	call	0x240	; 0x240 <LCD_WriteCmd>
 370:	87 e8       	ldi	r24, 0x87	; 135
 372:	93 e1       	ldi	r25, 0x13	; 19
 374:	01 97       	sbiw	r24, 0x01	; 1
 376:	f1 f7       	brne	.-4      	; 0x374 <LCD_Intialize+0x60>
 378:	00 c0       	rjmp	.+0      	; 0x37a <LCD_Intialize+0x66>
 37a:	00 00       	nop
	_delay_ms(2);
	
	InitStepFinished=1;
 37c:	81 e0       	ldi	r24, 0x01	; 1
 37e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 382:	08 95       	ret

00000384 <main>:


int main()
{
	
SmartHome_App_Start_Slave();
 384:	0e 94 49 00 	call	0x92	; 0x92 <SmartHome_App_Start_Slave>
 388:	80 e0       	ldi	r24, 0x00	; 0
 38a:	90 e0       	ldi	r25, 0x00	; 0
 38c:	08 95       	ret

0000038e <ADC_Intialize>:
 38e:	87 b1       	in	r24, 0x07	; 7
 390:	8f 73       	andi	r24, 0x3F	; 63
 392:	87 b9       	out	0x07, r24	; 7
 394:	87 b1       	in	r24, 0x07	; 7
 396:	80 64       	ori	r24, 0x40	; 64
 398:	87 b9       	out	0x07, r24	; 7
 39a:	86 b1       	in	r24, 0x06	; 6
 39c:	80 62       	ori	r24, 0x20	; 32
 39e:	86 b9       	out	0x06, r24	; 6
 3a0:	80 b7       	in	r24, 0x30	; 48
 3a2:	8f 71       	andi	r24, 0x1F	; 31
 3a4:	80 bf       	out	0x30, r24	; 48
 3a6:	80 b7       	in	r24, 0x30	; 48
 3a8:	80 bf       	out	0x30, r24	; 48
 3aa:	87 b1       	in	r24, 0x07	; 7
 3ac:	8f 7d       	andi	r24, 0xDF	; 223
 3ae:	87 b9       	out	0x07, r24	; 7
 3b0:	86 b1       	in	r24, 0x06	; 6
 3b2:	80 61       	ori	r24, 0x10	; 16
 3b4:	86 b9       	out	0x06, r24	; 6
 3b6:	86 b1       	in	r24, 0x06	; 6
 3b8:	80 68       	ori	r24, 0x80	; 128
 3ba:	86 b9       	out	0x06, r24	; 6
 3bc:	08 95       	ret

000003be <ADC_StartConversion>:
 3be:	97 b1       	in	r25, 0x07	; 7
 3c0:	90 7e       	andi	r25, 0xE0	; 224
 3c2:	97 b9       	out	0x07, r25	; 7
 3c4:	97 b1       	in	r25, 0x07	; 7
 3c6:	89 2b       	or	r24, r25
 3c8:	87 b9       	out	0x07, r24	; 7
 3ca:	86 b1       	in	r24, 0x06	; 6
 3cc:	80 64       	ori	r24, 0x40	; 64
 3ce:	86 b9       	out	0x06, r24	; 6
 3d0:	08 95       	ret

000003d2 <ADC_GetResult>:
 3d2:	84 b1       	in	r24, 0x04	; 4
 3d4:	95 b1       	in	r25, 0x05	; 5
 3d6:	08 95       	ret

000003d8 <__vector_16>:
 3d8:	1f 92       	push	r1
 3da:	0f 92       	push	r0
 3dc:	0f b6       	in	r0, 0x3f	; 63
 3de:	0f 92       	push	r0
 3e0:	11 24       	eor	r1, r1
 3e2:	2f 93       	push	r18
 3e4:	3f 93       	push	r19
 3e6:	4f 93       	push	r20
 3e8:	5f 93       	push	r21
 3ea:	6f 93       	push	r22
 3ec:	7f 93       	push	r23
 3ee:	8f 93       	push	r24
 3f0:	9f 93       	push	r25
 3f2:	af 93       	push	r26
 3f4:	bf 93       	push	r27
 3f6:	ef 93       	push	r30
 3f8:	ff 93       	push	r31
 3fa:	e0 91 61 00 	lds	r30, 0x0061	; 0x800061 <ADC_CallBackPtr>
 3fe:	f0 91 62 00 	lds	r31, 0x0062	; 0x800062 <ADC_CallBackPtr+0x1>
 402:	30 97       	sbiw	r30, 0x00	; 0
 404:	09 f0       	breq	.+2      	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 406:	09 95       	icall
 408:	ff 91       	pop	r31
 40a:	ef 91       	pop	r30
 40c:	bf 91       	pop	r27
 40e:	af 91       	pop	r26
 410:	9f 91       	pop	r25
 412:	8f 91       	pop	r24
 414:	7f 91       	pop	r23
 416:	6f 91       	pop	r22
 418:	5f 91       	pop	r21
 41a:	4f 91       	pop	r20
 41c:	3f 91       	pop	r19
 41e:	2f 91       	pop	r18
 420:	0f 90       	pop	r0
 422:	0f be       	out	0x3f, r0	; 63
 424:	0f 90       	pop	r0
 426:	1f 90       	pop	r1
 428:	18 95       	reti

0000042a <DIO_SetPortDirection>:
 42a:	61 30       	cpi	r22, 0x01	; 1
 42c:	a1 f4       	brne	.+40     	; 0x456 <DIO_SetPortDirection+0x2c>
 42e:	81 30       	cpi	r24, 0x01	; 1
 430:	49 f0       	breq	.+18     	; 0x444 <DIO_SetPortDirection+0x1a>
 432:	28 f0       	brcs	.+10     	; 0x43e <DIO_SetPortDirection+0x14>
 434:	82 30       	cpi	r24, 0x02	; 2
 436:	49 f0       	breq	.+18     	; 0x44a <DIO_SetPortDirection+0x20>
 438:	83 30       	cpi	r24, 0x03	; 3
 43a:	51 f0       	breq	.+20     	; 0x450 <DIO_SetPortDirection+0x26>
 43c:	08 95       	ret
 43e:	8f ef       	ldi	r24, 0xFF	; 255
 440:	8a bb       	out	0x1a, r24	; 26
 442:	08 95       	ret
 444:	8f ef       	ldi	r24, 0xFF	; 255
 446:	87 bb       	out	0x17, r24	; 23
 448:	08 95       	ret
 44a:	8f ef       	ldi	r24, 0xFF	; 255
 44c:	84 bb       	out	0x14, r24	; 20
 44e:	08 95       	ret
 450:	8f ef       	ldi	r24, 0xFF	; 255
 452:	81 bb       	out	0x11, r24	; 17
 454:	08 95       	ret
 456:	61 11       	cpse	r22, r1
 458:	0f c0       	rjmp	.+30     	; 0x478 <DIO_SetPortDirection+0x4e>
 45a:	81 30       	cpi	r24, 0x01	; 1
 45c:	41 f0       	breq	.+16     	; 0x46e <DIO_SetPortDirection+0x44>
 45e:	28 f0       	brcs	.+10     	; 0x46a <DIO_SetPortDirection+0x40>
 460:	82 30       	cpi	r24, 0x02	; 2
 462:	39 f0       	breq	.+14     	; 0x472 <DIO_SetPortDirection+0x48>
 464:	83 30       	cpi	r24, 0x03	; 3
 466:	39 f0       	breq	.+14     	; 0x476 <DIO_SetPortDirection+0x4c>
 468:	08 95       	ret
 46a:	1a ba       	out	0x1a, r1	; 26
 46c:	08 95       	ret
 46e:	17 ba       	out	0x17, r1	; 23
 470:	08 95       	ret
 472:	14 ba       	out	0x14, r1	; 20
 474:	08 95       	ret
 476:	11 ba       	out	0x11, r1	; 17
 478:	08 95       	ret

0000047a <DIO_SetPinDirection>:
 47a:	41 11       	cpse	r20, r1
 47c:	38 c0       	rjmp	.+112    	; 0x4ee <DIO_SetPinDirection+0x74>
 47e:	81 30       	cpi	r24, 0x01	; 1
 480:	91 f0       	breq	.+36     	; 0x4a6 <DIO_SetPinDirection+0x2c>
 482:	28 f0       	brcs	.+10     	; 0x48e <DIO_SetPinDirection+0x14>
 484:	82 30       	cpi	r24, 0x02	; 2
 486:	d9 f0       	breq	.+54     	; 0x4be <DIO_SetPinDirection+0x44>
 488:	83 30       	cpi	r24, 0x03	; 3
 48a:	29 f1       	breq	.+74     	; 0x4d6 <DIO_SetPinDirection+0x5c>
 48c:	08 95       	ret
 48e:	2a b3       	in	r18, 0x1a	; 26
 490:	81 e0       	ldi	r24, 0x01	; 1
 492:	90 e0       	ldi	r25, 0x00	; 0
 494:	02 c0       	rjmp	.+4      	; 0x49a <DIO_SetPinDirection+0x20>
 496:	88 0f       	add	r24, r24
 498:	99 1f       	adc	r25, r25
 49a:	6a 95       	dec	r22
 49c:	e2 f7       	brpl	.-8      	; 0x496 <DIO_SetPinDirection+0x1c>
 49e:	80 95       	com	r24
 4a0:	82 23       	and	r24, r18
 4a2:	8a bb       	out	0x1a, r24	; 26
 4a4:	08 95       	ret
 4a6:	27 b3       	in	r18, 0x17	; 23
 4a8:	81 e0       	ldi	r24, 0x01	; 1
 4aa:	90 e0       	ldi	r25, 0x00	; 0
 4ac:	02 c0       	rjmp	.+4      	; 0x4b2 <DIO_SetPinDirection+0x38>
 4ae:	88 0f       	add	r24, r24
 4b0:	99 1f       	adc	r25, r25
 4b2:	6a 95       	dec	r22
 4b4:	e2 f7       	brpl	.-8      	; 0x4ae <DIO_SetPinDirection+0x34>
 4b6:	80 95       	com	r24
 4b8:	82 23       	and	r24, r18
 4ba:	87 bb       	out	0x17, r24	; 23
 4bc:	08 95       	ret
 4be:	24 b3       	in	r18, 0x14	; 20
 4c0:	81 e0       	ldi	r24, 0x01	; 1
 4c2:	90 e0       	ldi	r25, 0x00	; 0
 4c4:	02 c0       	rjmp	.+4      	; 0x4ca <DIO_SetPinDirection+0x50>
 4c6:	88 0f       	add	r24, r24
 4c8:	99 1f       	adc	r25, r25
 4ca:	6a 95       	dec	r22
 4cc:	e2 f7       	brpl	.-8      	; 0x4c6 <DIO_SetPinDirection+0x4c>
 4ce:	80 95       	com	r24
 4d0:	82 23       	and	r24, r18
 4d2:	84 bb       	out	0x14, r24	; 20
 4d4:	08 95       	ret
 4d6:	21 b3       	in	r18, 0x11	; 17
 4d8:	81 e0       	ldi	r24, 0x01	; 1
 4da:	90 e0       	ldi	r25, 0x00	; 0
 4dc:	02 c0       	rjmp	.+4      	; 0x4e2 <DIO_SetPinDirection+0x68>
 4de:	88 0f       	add	r24, r24
 4e0:	99 1f       	adc	r25, r25
 4e2:	6a 95       	dec	r22
 4e4:	e2 f7       	brpl	.-8      	; 0x4de <DIO_SetPinDirection+0x64>
 4e6:	80 95       	com	r24
 4e8:	82 23       	and	r24, r18
 4ea:	81 bb       	out	0x11, r24	; 17
 4ec:	08 95       	ret
 4ee:	41 30       	cpi	r20, 0x01	; 1
 4f0:	99 f5       	brne	.+102    	; 0x558 <DIO_SetPinDirection+0xde>
 4f2:	81 30       	cpi	r24, 0x01	; 1
 4f4:	89 f0       	breq	.+34     	; 0x518 <DIO_SetPinDirection+0x9e>
 4f6:	28 f0       	brcs	.+10     	; 0x502 <DIO_SetPinDirection+0x88>
 4f8:	82 30       	cpi	r24, 0x02	; 2
 4fa:	c9 f0       	breq	.+50     	; 0x52e <DIO_SetPinDirection+0xb4>
 4fc:	83 30       	cpi	r24, 0x03	; 3
 4fe:	11 f1       	breq	.+68     	; 0x544 <DIO_SetPinDirection+0xca>
 500:	08 95       	ret
 502:	2a b3       	in	r18, 0x1a	; 26
 504:	81 e0       	ldi	r24, 0x01	; 1
 506:	90 e0       	ldi	r25, 0x00	; 0
 508:	02 c0       	rjmp	.+4      	; 0x50e <DIO_SetPinDirection+0x94>
 50a:	88 0f       	add	r24, r24
 50c:	99 1f       	adc	r25, r25
 50e:	6a 95       	dec	r22
 510:	e2 f7       	brpl	.-8      	; 0x50a <DIO_SetPinDirection+0x90>
 512:	82 2b       	or	r24, r18
 514:	8a bb       	out	0x1a, r24	; 26
 516:	08 95       	ret
 518:	27 b3       	in	r18, 0x17	; 23
 51a:	81 e0       	ldi	r24, 0x01	; 1
 51c:	90 e0       	ldi	r25, 0x00	; 0
 51e:	02 c0       	rjmp	.+4      	; 0x524 <DIO_SetPinDirection+0xaa>
 520:	88 0f       	add	r24, r24
 522:	99 1f       	adc	r25, r25
 524:	6a 95       	dec	r22
 526:	e2 f7       	brpl	.-8      	; 0x520 <DIO_SetPinDirection+0xa6>
 528:	82 2b       	or	r24, r18
 52a:	87 bb       	out	0x17, r24	; 23
 52c:	08 95       	ret
 52e:	24 b3       	in	r18, 0x14	; 20
 530:	81 e0       	ldi	r24, 0x01	; 1
 532:	90 e0       	ldi	r25, 0x00	; 0
 534:	02 c0       	rjmp	.+4      	; 0x53a <DIO_SetPinDirection+0xc0>
 536:	88 0f       	add	r24, r24
 538:	99 1f       	adc	r25, r25
 53a:	6a 95       	dec	r22
 53c:	e2 f7       	brpl	.-8      	; 0x536 <DIO_SetPinDirection+0xbc>
 53e:	82 2b       	or	r24, r18
 540:	84 bb       	out	0x14, r24	; 20
 542:	08 95       	ret
 544:	21 b3       	in	r18, 0x11	; 17
 546:	81 e0       	ldi	r24, 0x01	; 1
 548:	90 e0       	ldi	r25, 0x00	; 0
 54a:	02 c0       	rjmp	.+4      	; 0x550 <DIO_SetPinDirection+0xd6>
 54c:	88 0f       	add	r24, r24
 54e:	99 1f       	adc	r25, r25
 550:	6a 95       	dec	r22
 552:	e2 f7       	brpl	.-8      	; 0x54c <DIO_SetPinDirection+0xd2>
 554:	82 2b       	or	r24, r18
 556:	81 bb       	out	0x11, r24	; 17
 558:	08 95       	ret

0000055a <DIO_SetPinValue>:
 55a:	41 30       	cpi	r20, 0x01	; 1
 55c:	a1 f5       	brne	.+104    	; 0x5c6 <DIO_SetPinValue+0x6c>
 55e:	81 30       	cpi	r24, 0x01	; 1
 560:	89 f0       	breq	.+34     	; 0x584 <DIO_SetPinValue+0x2a>
 562:	28 f0       	brcs	.+10     	; 0x56e <DIO_SetPinValue+0x14>
 564:	82 30       	cpi	r24, 0x02	; 2
 566:	c9 f0       	breq	.+50     	; 0x59a <DIO_SetPinValue+0x40>
 568:	83 30       	cpi	r24, 0x03	; 3
 56a:	11 f1       	breq	.+68     	; 0x5b0 <DIO_SetPinValue+0x56>
 56c:	08 95       	ret
 56e:	2b b3       	in	r18, 0x1b	; 27
 570:	81 e0       	ldi	r24, 0x01	; 1
 572:	90 e0       	ldi	r25, 0x00	; 0
 574:	02 c0       	rjmp	.+4      	; 0x57a <DIO_SetPinValue+0x20>
 576:	88 0f       	add	r24, r24
 578:	99 1f       	adc	r25, r25
 57a:	6a 95       	dec	r22
 57c:	e2 f7       	brpl	.-8      	; 0x576 <DIO_SetPinValue+0x1c>
 57e:	82 2b       	or	r24, r18
 580:	8b bb       	out	0x1b, r24	; 27
 582:	08 95       	ret
 584:	28 b3       	in	r18, 0x18	; 24
 586:	81 e0       	ldi	r24, 0x01	; 1
 588:	90 e0       	ldi	r25, 0x00	; 0
 58a:	02 c0       	rjmp	.+4      	; 0x590 <DIO_SetPinValue+0x36>
 58c:	88 0f       	add	r24, r24
 58e:	99 1f       	adc	r25, r25
 590:	6a 95       	dec	r22
 592:	e2 f7       	brpl	.-8      	; 0x58c <DIO_SetPinValue+0x32>
 594:	82 2b       	or	r24, r18
 596:	88 bb       	out	0x18, r24	; 24
 598:	08 95       	ret
 59a:	25 b3       	in	r18, 0x15	; 21
 59c:	81 e0       	ldi	r24, 0x01	; 1
 59e:	90 e0       	ldi	r25, 0x00	; 0
 5a0:	02 c0       	rjmp	.+4      	; 0x5a6 <DIO_SetPinValue+0x4c>
 5a2:	88 0f       	add	r24, r24
 5a4:	99 1f       	adc	r25, r25
 5a6:	6a 95       	dec	r22
 5a8:	e2 f7       	brpl	.-8      	; 0x5a2 <DIO_SetPinValue+0x48>
 5aa:	82 2b       	or	r24, r18
 5ac:	85 bb       	out	0x15, r24	; 21
 5ae:	08 95       	ret
 5b0:	22 b3       	in	r18, 0x12	; 18
 5b2:	81 e0       	ldi	r24, 0x01	; 1
 5b4:	90 e0       	ldi	r25, 0x00	; 0
 5b6:	02 c0       	rjmp	.+4      	; 0x5bc <DIO_SetPinValue+0x62>
 5b8:	88 0f       	add	r24, r24
 5ba:	99 1f       	adc	r25, r25
 5bc:	6a 95       	dec	r22
 5be:	e2 f7       	brpl	.-8      	; 0x5b8 <DIO_SetPinValue+0x5e>
 5c0:	82 2b       	or	r24, r18
 5c2:	82 bb       	out	0x12, r24	; 18
 5c4:	08 95       	ret
 5c6:	41 11       	cpse	r20, r1
 5c8:	37 c0       	rjmp	.+110    	; 0x638 <DIO_SetPinValue+0xde>
 5ca:	81 30       	cpi	r24, 0x01	; 1
 5cc:	91 f0       	breq	.+36     	; 0x5f2 <DIO_SetPinValue+0x98>
 5ce:	28 f0       	brcs	.+10     	; 0x5da <DIO_SetPinValue+0x80>
 5d0:	82 30       	cpi	r24, 0x02	; 2
 5d2:	d9 f0       	breq	.+54     	; 0x60a <DIO_SetPinValue+0xb0>
 5d4:	83 30       	cpi	r24, 0x03	; 3
 5d6:	29 f1       	breq	.+74     	; 0x622 <DIO_SetPinValue+0xc8>
 5d8:	08 95       	ret
 5da:	2b b3       	in	r18, 0x1b	; 27
 5dc:	81 e0       	ldi	r24, 0x01	; 1
 5de:	90 e0       	ldi	r25, 0x00	; 0
 5e0:	02 c0       	rjmp	.+4      	; 0x5e6 <DIO_SetPinValue+0x8c>
 5e2:	88 0f       	add	r24, r24
 5e4:	99 1f       	adc	r25, r25
 5e6:	6a 95       	dec	r22
 5e8:	e2 f7       	brpl	.-8      	; 0x5e2 <DIO_SetPinValue+0x88>
 5ea:	80 95       	com	r24
 5ec:	82 23       	and	r24, r18
 5ee:	8b bb       	out	0x1b, r24	; 27
 5f0:	08 95       	ret
 5f2:	28 b3       	in	r18, 0x18	; 24
 5f4:	81 e0       	ldi	r24, 0x01	; 1
 5f6:	90 e0       	ldi	r25, 0x00	; 0
 5f8:	02 c0       	rjmp	.+4      	; 0x5fe <DIO_SetPinValue+0xa4>
 5fa:	88 0f       	add	r24, r24
 5fc:	99 1f       	adc	r25, r25
 5fe:	6a 95       	dec	r22
 600:	e2 f7       	brpl	.-8      	; 0x5fa <DIO_SetPinValue+0xa0>
 602:	80 95       	com	r24
 604:	82 23       	and	r24, r18
 606:	88 bb       	out	0x18, r24	; 24
 608:	08 95       	ret
 60a:	25 b3       	in	r18, 0x15	; 21
 60c:	81 e0       	ldi	r24, 0x01	; 1
 60e:	90 e0       	ldi	r25, 0x00	; 0
 610:	02 c0       	rjmp	.+4      	; 0x616 <DIO_SetPinValue+0xbc>
 612:	88 0f       	add	r24, r24
 614:	99 1f       	adc	r25, r25
 616:	6a 95       	dec	r22
 618:	e2 f7       	brpl	.-8      	; 0x612 <DIO_SetPinValue+0xb8>
 61a:	80 95       	com	r24
 61c:	82 23       	and	r24, r18
 61e:	85 bb       	out	0x15, r24	; 21
 620:	08 95       	ret
 622:	22 b3       	in	r18, 0x12	; 18
 624:	81 e0       	ldi	r24, 0x01	; 1
 626:	90 e0       	ldi	r25, 0x00	; 0
 628:	02 c0       	rjmp	.+4      	; 0x62e <DIO_SetPinValue+0xd4>
 62a:	88 0f       	add	r24, r24
 62c:	99 1f       	adc	r25, r25
 62e:	6a 95       	dec	r22
 630:	e2 f7       	brpl	.-8      	; 0x62a <DIO_SetPinValue+0xd0>
 632:	80 95       	com	r24
 634:	82 23       	and	r24, r18
 636:	82 bb       	out	0x12, r24	; 18
 638:	08 95       	ret

0000063a <__vector_1>:
 63a:	1f 92       	push	r1
 63c:	0f 92       	push	r0
 63e:	0f b6       	in	r0, 0x3f	; 63
 640:	0f 92       	push	r0
 642:	11 24       	eor	r1, r1
 644:	2f 93       	push	r18
 646:	3f 93       	push	r19
 648:	4f 93       	push	r20
 64a:	5f 93       	push	r21
 64c:	6f 93       	push	r22
 64e:	7f 93       	push	r23
 650:	8f 93       	push	r24
 652:	9f 93       	push	r25
 654:	af 93       	push	r26
 656:	bf 93       	push	r27
 658:	ef 93       	push	r30
 65a:	ff 93       	push	r31
 65c:	e0 91 63 00 	lds	r30, 0x0063	; 0x800063 <EXTI_CallBackPtr>
 660:	f0 91 64 00 	lds	r31, 0x0064	; 0x800064 <EXTI_CallBackPtr+0x1>
 664:	30 97       	sbiw	r30, 0x00	; 0
 666:	09 f0       	breq	.+2      	; 0x66a <__vector_1+0x30>
 668:	09 95       	icall
 66a:	ff 91       	pop	r31
 66c:	ef 91       	pop	r30
 66e:	bf 91       	pop	r27
 670:	af 91       	pop	r26
 672:	9f 91       	pop	r25
 674:	8f 91       	pop	r24
 676:	7f 91       	pop	r23
 678:	6f 91       	pop	r22
 67a:	5f 91       	pop	r21
 67c:	4f 91       	pop	r20
 67e:	3f 91       	pop	r19
 680:	2f 91       	pop	r18
 682:	0f 90       	pop	r0
 684:	0f be       	out	0x3f, r0	; 63
 686:	0f 90       	pop	r0
 688:	1f 90       	pop	r1
 68a:	18 95       	reti

0000068c <SPI_Slave_Intialize>:
  }
  
  void SPI_Slave_Intialize()
  {
	  //1) set MOSI ,SCK,SS as input pins and MISO to output pin
	   DIO_SetPinDirection(PORTB,4,Input);//SS
 68c:	40 e0       	ldi	r20, 0x00	; 0
 68e:	64 e0       	ldi	r22, 0x04	; 4
 690:	81 e0       	ldi	r24, 0x01	; 1
 692:	0e 94 3d 02 	call	0x47a	; 0x47a <DIO_SetPinDirection>
	   DIO_SetPinDirection(PORTB,5,Input);//MOSI
 696:	40 e0       	ldi	r20, 0x00	; 0
 698:	65 e0       	ldi	r22, 0x05	; 5
 69a:	81 e0       	ldi	r24, 0x01	; 1
 69c:	0e 94 3d 02 	call	0x47a	; 0x47a <DIO_SetPinDirection>
	   DIO_SetPinDirection(PORTB,7,Input);//SCK
 6a0:	40 e0       	ldi	r20, 0x00	; 0
 6a2:	67 e0       	ldi	r22, 0x07	; 7
 6a4:	81 e0       	ldi	r24, 0x01	; 1
 6a6:	0e 94 3d 02 	call	0x47a	; 0x47a <DIO_SetPinDirection>
	   DIO_SetPinDirection(PORTB,6,Output);//MISO
 6aa:	41 e0       	ldi	r20, 0x01	; 1
 6ac:	66 e0       	ldi	r22, 0x06	; 6
 6ae:	81 e0       	ldi	r24, 0x01	; 1
 6b0:	0e 94 3d 02 	call	0x47a	; 0x47a <DIO_SetPinDirection>
	   
	   
	   //2)enable SPI
	   SetBIT(SPCR_REG,6);
 6b4:	8d b1       	in	r24, 0x0d	; 13
 6b6:	80 64       	ori	r24, 0x40	; 64
 6b8:	8d b9       	out	0x0d, r24	; 13
	   //3) enable SPI in slave mood
	   SPCR_REG |= SPI_Slave_Mode;
 6ba:	8d b1       	in	r24, 0x0d	; 13
 6bc:	8d b9       	out	0x0d, r24	; 13
	   	//4) Choose prescaling
	   	SPCR_REG |= SPI_Prescaling_Selector;
 6be:	8d b1       	in	r24, 0x0d	; 13
 6c0:	81 60       	ori	r24, 0x01	; 1
 6c2:	8d b9       	out	0x0d, r24	; 13
	   	//5) choose speed
	   	SPSR_REG |= SPI_Speed_Selector;
 6c4:	8e b1       	in	r24, 0x0e	; 14
 6c6:	8e b9       	out	0x0e, r24	; 14
 6c8:	08 95       	ret

000006ca <SPI_Slave_Recieve>:
  }
   uint8 SPI_Slave_Recieve()
   {
	   //1)sET DUMMY VALUE
	   SPDR_REG=0xFF;
 6ca:	8f ef       	ldi	r24, 0xFF	; 255
 6cc:	8f b9       	out	0x0f, r24	; 15
	   //2)WAIT UNTIL RECIEVE COMPLETE
		while(!GetBIT(SPSR_REG,7));
 6ce:	77 9b       	sbis	0x0e, 7	; 14
 6d0:	fe cf       	rjmp	.-4      	; 0x6ce <SPI_Slave_Recieve+0x4>
		uint8 flusher =SPDR_REG;
 6d2:	8f b1       	in	r24, 0x0f	; 15
		return(flusher);
   }
 6d4:	08 95       	ret

000006d6 <__vector_11>:
 6d6:	1f 92       	push	r1
 6d8:	0f 92       	push	r0
 6da:	0f b6       	in	r0, 0x3f	; 63
 6dc:	0f 92       	push	r0
 6de:	11 24       	eor	r1, r1
 6e0:	2f 93       	push	r18
 6e2:	3f 93       	push	r19
 6e4:	4f 93       	push	r20
 6e6:	5f 93       	push	r21
 6e8:	6f 93       	push	r22
 6ea:	7f 93       	push	r23
 6ec:	8f 93       	push	r24
 6ee:	9f 93       	push	r25
 6f0:	af 93       	push	r26
 6f2:	bf 93       	push	r27
 6f4:	ef 93       	push	r30
 6f6:	ff 93       	push	r31
 6f8:	e0 91 65 00 	lds	r30, 0x0065	; 0x800065 <Timer_CallBackPtr>
 6fc:	f0 91 66 00 	lds	r31, 0x0066	; 0x800066 <Timer_CallBackPtr+0x1>
 700:	30 97       	sbiw	r30, 0x00	; 0
 702:	09 f0       	breq	.+2      	; 0x706 <__vector_11+0x30>
 704:	09 95       	icall
 706:	ff 91       	pop	r31
 708:	ef 91       	pop	r30
 70a:	bf 91       	pop	r27
 70c:	af 91       	pop	r26
 70e:	9f 91       	pop	r25
 710:	8f 91       	pop	r24
 712:	7f 91       	pop	r23
 714:	6f 91       	pop	r22
 716:	5f 91       	pop	r21
 718:	4f 91       	pop	r20
 71a:	3f 91       	pop	r19
 71c:	2f 91       	pop	r18
 71e:	0f 90       	pop	r0
 720:	0f be       	out	0x3f, r0	; 63
 722:	0f 90       	pop	r0
 724:	1f 90       	pop	r1
 726:	18 95       	reti

00000728 <_exit>:
 728:	f8 94       	cli

0000072a <__stop_program>:
 72a:	ff cf       	rjmp	.-2      	; 0x72a <__stop_program>
