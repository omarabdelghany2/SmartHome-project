
DIO_lCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000548  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000005bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  00800060  00800060  000005bc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005bc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000005ec  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000198  00000000  00000000  00000628  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001271  00000000  00000000  000007c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a7b  00000000  00000000  00001a31  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ace  00000000  00000000  000024ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000360  00000000  00000000  00002f7c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000747  00000000  00000000  000032dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000086b  00000000  00000000  00003a23  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000128  00000000  00000000  0000428e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 2b 02 	jmp	0x456	; 0x456 <__vector_1>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 79 02 	jmp	0x4f2	; 0x4f2 <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 fa 00 	jmp	0x1f4	; 0x1f4 <__vector_16>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 e4       	ldi	r30, 0x48	; 72
  68:	f5 e0       	ldi	r31, 0x05	; 5
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a6 36       	cpi	r26, 0x66	; 102
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 dd 00 	call	0x1ba	; 0x1ba <main>
  8a:	0c 94 a2 02 	jmp	0x544	; 0x544 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <SmartHome_App_Start_Slave>:

void SmartHome_App_Start_Slave()


{
		ADC_Intialize();
  92:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <ADC_Intialize>
		DIO_SetPortDirection(PORTD,Output);
  96:	61 e0       	ldi	r22, 0x01	; 1
  98:	83 e0       	ldi	r24, 0x03	; 3
  9a:	0e 94 23 01 	call	0x246	; 0x246 <DIO_SetPortDirection>
		DIO_SetPinDirection(PORTA,0,Input);//TEMPARTURE SENSOR
  9e:	40 e0       	ldi	r20, 0x00	; 0
  a0:	60 e0       	ldi	r22, 0x00	; 0
  a2:	80 e0       	ldi	r24, 0x00	; 0
  a4:	0e 94 4b 01 	call	0x296	; 0x296 <DIO_SetPinDirection>
	DIO_SetPortDirection(PORTC,Output);
  a8:	61 e0       	ldi	r22, 0x01	; 1
  aa:	82 e0       	ldi	r24, 0x02	; 2
  ac:	0e 94 23 01 	call	0x246	; 0x246 <DIO_SetPortDirection>
		SPI_Slave_Intialize();
  b0:	0e 94 54 02 	call	0x4a8	; 0x4a8 <SPI_Slave_Intialize>
	uint8 Recieved;
	uint8 Set_temp = 0;
	
	while(1)
	{
		Recieved=SPI_Slave_Recieve();
  b4:	0e 94 73 02 	call	0x4e6	; 0x4e6 <SPI_Slave_Recieve>
		
		switch(Recieved)
  b8:	83 30       	cpi	r24, 0x03	; 3
  ba:	91 f1       	breq	.+100    	; 0x120 <SmartHome_App_Start_Slave+0x8e>
  bc:	28 f4       	brcc	.+10     	; 0xc8 <SmartHome_App_Start_Slave+0x36>
  be:	81 30       	cpi	r24, 0x01	; 1
  c0:	59 f0       	breq	.+22     	; 0xd8 <SmartHome_App_Start_Slave+0x46>
  c2:	82 30       	cpi	r24, 0x02	; 2
  c4:	e9 f0       	breq	.+58     	; 0x100 <SmartHome_App_Start_Slave+0x6e>
  c6:	f6 cf       	rjmp	.-20     	; 0xb4 <SmartHome_App_Start_Slave+0x22>
  c8:	85 30       	cpi	r24, 0x05	; 5
  ca:	09 f4       	brne	.+2      	; 0xce <SmartHome_App_Start_Slave+0x3c>
  cc:	4f c0       	rjmp	.+158    	; 0x16c <SmartHome_App_Start_Slave+0xda>
  ce:	d8 f1       	brcs	.+118    	; 0x146 <SmartHome_App_Start_Slave+0xb4>
  d0:	86 30       	cpi	r24, 0x06	; 6
  d2:	09 f4       	brne	.+2      	; 0xd6 <SmartHome_App_Start_Slave+0x44>
  d4:	5e c0       	rjmp	.+188    	; 0x192 <SmartHome_App_Start_Slave+0x100>
  d6:	ee cf       	rjmp	.-36     	; 0xb4 <SmartHome_App_Start_Slave+0x22>
		
		{
			case 1 : //room 1
			Recieved=SPI_Slave_Recieve();
  d8:	0e 94 73 02 	call	0x4e6	; 0x4e6 <SPI_Slave_Recieve>
			if(Recieved=='N')
  dc:	8e 34       	cpi	r24, 0x4E	; 78
  de:	31 f4       	brne	.+12     	; 0xec <SmartHome_App_Start_Slave+0x5a>
				DIO_SetPinValue(PORTD,7,HIGH);
  e0:	41 e0       	ldi	r20, 0x01	; 1
  e2:	67 e0       	ldi	r22, 0x07	; 7
  e4:	83 e0       	ldi	r24, 0x03	; 3
  e6:	0e 94 bb 01 	call	0x376	; 0x376 <DIO_SetPinValue>
  ea:	07 c0       	rjmp	.+14     	; 0xfa <SmartHome_App_Start_Slave+0x68>
			else if(Recieved=='F')
  ec:	86 34       	cpi	r24, 0x46	; 70
  ee:	29 f4       	brne	.+10     	; 0xfa <SmartHome_App_Start_Slave+0x68>
				DIO_SetPinValue(PORTD,7,LOW);
  f0:	40 e0       	ldi	r20, 0x00	; 0
  f2:	67 e0       	ldi	r22, 0x07	; 7
  f4:	83 e0       	ldi	r24, 0x03	; 3
  f6:	0e 94 bb 01 	call	0x376	; 0x376 <DIO_SetPinValue>
			Recieved=SPI_Slave_Recieve();
  fa:	0e 94 73 02 	call	0x4e6	; 0x4e6 <SPI_Slave_Recieve>
		
				break;	
  fe:	da cf       	rjmp	.-76     	; 0xb4 <SmartHome_App_Start_Slave+0x22>
			
			
			case 2 : //room 2
			Recieved=SPI_Slave_Recieve();
 100:	0e 94 73 02 	call	0x4e6	; 0x4e6 <SPI_Slave_Recieve>
			if(Recieved=='N')
 104:	8e 34       	cpi	r24, 0x4E	; 78
 106:	31 f4       	brne	.+12     	; 0x114 <SmartHome_App_Start_Slave+0x82>
				DIO_SetPinValue(PORTD,6,HIGH);
 108:	41 e0       	ldi	r20, 0x01	; 1
 10a:	66 e0       	ldi	r22, 0x06	; 6
 10c:	83 e0       	ldi	r24, 0x03	; 3
 10e:	0e 94 bb 01 	call	0x376	; 0x376 <DIO_SetPinValue>
 112:	d0 cf       	rjmp	.-96     	; 0xb4 <SmartHome_App_Start_Slave+0x22>
			else 
				DIO_SetPinValue(PORTD,6,LOW);
 114:	40 e0       	ldi	r20, 0x00	; 0
 116:	66 e0       	ldi	r22, 0x06	; 6
 118:	83 e0       	ldi	r24, 0x03	; 3
 11a:	0e 94 bb 01 	call	0x376	; 0x376 <DIO_SetPinValue>
 11e:	ca cf       	rjmp	.-108    	; 0xb4 <SmartHome_App_Start_Slave+0x22>
	
			break;				
			
			
			case 3 : //room 3
			Recieved=SPI_Slave_Recieve();
 120:	0e 94 73 02 	call	0x4e6	; 0x4e6 <SPI_Slave_Recieve>
			if(Recieved=='N')
 124:	8e 34       	cpi	r24, 0x4E	; 78
 126:	31 f4       	brne	.+12     	; 0x134 <SmartHome_App_Start_Slave+0xa2>
				DIO_SetPinValue(PORTD,5,HIGH);
 128:	41 e0       	ldi	r20, 0x01	; 1
 12a:	65 e0       	ldi	r22, 0x05	; 5
 12c:	83 e0       	ldi	r24, 0x03	; 3
 12e:	0e 94 bb 01 	call	0x376	; 0x376 <DIO_SetPinValue>
 132:	c0 cf       	rjmp	.-128    	; 0xb4 <SmartHome_App_Start_Slave+0x22>
			else if(Recieved=='F')
 134:	86 34       	cpi	r24, 0x46	; 70
 136:	09 f0       	breq	.+2      	; 0x13a <SmartHome_App_Start_Slave+0xa8>
 138:	bd cf       	rjmp	.-134    	; 0xb4 <SmartHome_App_Start_Slave+0x22>
				DIO_SetPinValue(PORTD,5,LOW);
 13a:	40 e0       	ldi	r20, 0x00	; 0
 13c:	65 e0       	ldi	r22, 0x05	; 5
 13e:	83 e0       	ldi	r24, 0x03	; 3
 140:	0e 94 bb 01 	call	0x376	; 0x376 <DIO_SetPinValue>
 144:	b7 cf       	rjmp	.-146    	; 0xb4 <SmartHome_App_Start_Slave+0x22>
		
			break;				
						
			case 4 : //room 4
			Recieved=SPI_Slave_Recieve();
 146:	0e 94 73 02 	call	0x4e6	; 0x4e6 <SPI_Slave_Recieve>
			if(Recieved=='N')
 14a:	8e 34       	cpi	r24, 0x4E	; 78
 14c:	31 f4       	brne	.+12     	; 0x15a <SmartHome_App_Start_Slave+0xc8>
				DIO_SetPinValue(PORTD,4,HIGH);
 14e:	41 e0       	ldi	r20, 0x01	; 1
 150:	64 e0       	ldi	r22, 0x04	; 4
 152:	83 e0       	ldi	r24, 0x03	; 3
 154:	0e 94 bb 01 	call	0x376	; 0x376 <DIO_SetPinValue>
 158:	ad cf       	rjmp	.-166    	; 0xb4 <SmartHome_App_Start_Slave+0x22>
			else if(Recieved=='F')
 15a:	86 34       	cpi	r24, 0x46	; 70
 15c:	09 f0       	breq	.+2      	; 0x160 <SmartHome_App_Start_Slave+0xce>
 15e:	aa cf       	rjmp	.-172    	; 0xb4 <SmartHome_App_Start_Slave+0x22>
				DIO_SetPinValue(PORTD,4,LOW);
 160:	40 e0       	ldi	r20, 0x00	; 0
 162:	64 e0       	ldi	r22, 0x04	; 4
 164:	83 e0       	ldi	r24, 0x03	; 3
 166:	0e 94 bb 01 	call	0x376	; 0x376 <DIO_SetPinValue>
 16a:	a4 cf       	rjmp	.-184    	; 0xb4 <SmartHome_App_Start_Slave+0x22>
			
			break;
			//TV
			case 5:
			Recieved=SPI_Slave_Recieve();
 16c:	0e 94 73 02 	call	0x4e6	; 0x4e6 <SPI_Slave_Recieve>
			if(Recieved=='N')
 170:	8e 34       	cpi	r24, 0x4E	; 78
 172:	31 f4       	brne	.+12     	; 0x180 <SmartHome_App_Start_Slave+0xee>
			DIO_SetPinValue(PORTD,3,HIGH);
 174:	41 e0       	ldi	r20, 0x01	; 1
 176:	63 e0       	ldi	r22, 0x03	; 3
 178:	83 e0       	ldi	r24, 0x03	; 3
 17a:	0e 94 bb 01 	call	0x376	; 0x376 <DIO_SetPinValue>
 17e:	9a cf       	rjmp	.-204    	; 0xb4 <SmartHome_App_Start_Slave+0x22>
			else if(Recieved=='F')
 180:	86 34       	cpi	r24, 0x46	; 70
 182:	09 f0       	breq	.+2      	; 0x186 <SmartHome_App_Start_Slave+0xf4>
 184:	97 cf       	rjmp	.-210    	; 0xb4 <SmartHome_App_Start_Slave+0x22>
			DIO_SetPinValue(PORTD,3,LOW);
 186:	40 e0       	ldi	r20, 0x00	; 0
 188:	63 e0       	ldi	r22, 0x03	; 3
 18a:	83 e0       	ldi	r24, 0x03	; 3
 18c:	0e 94 bb 01 	call	0x376	; 0x376 <DIO_SetPinValue>
 190:	91 cf       	rjmp	.-222    	; 0xb4 <SmartHome_App_Start_Slave+0x22>
			break;
			//CONDITIONER
			
			case 6 :
			
			Recieved=SPI_Slave_Recieve();
 192:	0e 94 73 02 	call	0x4e6	; 0x4e6 <SPI_Slave_Recieve>
			if(Recieved='C') //C FOR CONTROL (ON OR OFF)
			{
				Recieved=SPI_Slave_Recieve();
 196:	0e 94 73 02 	call	0x4e6	; 0x4e6 <SPI_Slave_Recieve>
				
				if(Recieved=='N')
 19a:	8e 34       	cpi	r24, 0x4E	; 78
 19c:	31 f4       	brne	.+12     	; 0x1aa <SmartHome_App_Start_Slave+0x118>
					DIO_SetPinValue(PORTD,2,HIGH);
 19e:	41 e0       	ldi	r20, 0x01	; 1
 1a0:	62 e0       	ldi	r22, 0x02	; 2
 1a2:	83 e0       	ldi	r24, 0x03	; 3
 1a4:	0e 94 bb 01 	call	0x376	; 0x376 <DIO_SetPinValue>
 1a8:	05 c0       	rjmp	.+10     	; 0x1b4 <SmartHome_App_Start_Slave+0x122>
				else
					DIO_SetPinValue(PORTD,2,LOW);
 1aa:	40 e0       	ldi	r20, 0x00	; 0
 1ac:	62 e0       	ldi	r22, 0x02	; 2
 1ae:	83 e0       	ldi	r24, 0x03	; 3
 1b0:	0e 94 bb 01 	call	0x376	; 0x376 <DIO_SetPinValue>
					Set_temp+=(Recieved-'0');	
			
					DIO_SetPortValue(PORTC,5);		
			}
			
			Recieved=SPI_Slave_Recieve();
 1b4:	0e 94 73 02 	call	0x4e6	; 0x4e6 <SPI_Slave_Recieve>
				break;
 1b8:	7d cf       	rjmp	.-262    	; 0xb4 <SmartHome_App_Start_Slave+0x22>

000001ba <main>:
#include "APP/SPI_TRY.h"

int main()
{
	//SPI_try();
SmartHome_App_Start_Slave();
 1ba:	0e 94 49 00 	call	0x92	; 0x92 <SmartHome_App_Start_Slave>
 1be:	80 e0       	ldi	r24, 0x00	; 0
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	08 95       	ret

000001c4 <ADC_Intialize>:
 1c4:	87 b1       	in	r24, 0x07	; 7
 1c6:	8f 73       	andi	r24, 0x3F	; 63
 1c8:	87 b9       	out	0x07, r24	; 7
 1ca:	87 b1       	in	r24, 0x07	; 7
 1cc:	80 64       	ori	r24, 0x40	; 64
 1ce:	87 b9       	out	0x07, r24	; 7
 1d0:	86 b1       	in	r24, 0x06	; 6
 1d2:	80 62       	ori	r24, 0x20	; 32
 1d4:	86 b9       	out	0x06, r24	; 6
 1d6:	80 b7       	in	r24, 0x30	; 48
 1d8:	8f 71       	andi	r24, 0x1F	; 31
 1da:	80 bf       	out	0x30, r24	; 48
 1dc:	80 b7       	in	r24, 0x30	; 48
 1de:	80 bf       	out	0x30, r24	; 48
 1e0:	87 b1       	in	r24, 0x07	; 7
 1e2:	8f 7d       	andi	r24, 0xDF	; 223
 1e4:	87 b9       	out	0x07, r24	; 7
 1e6:	86 b1       	in	r24, 0x06	; 6
 1e8:	80 61       	ori	r24, 0x10	; 16
 1ea:	86 b9       	out	0x06, r24	; 6
 1ec:	86 b1       	in	r24, 0x06	; 6
 1ee:	80 68       	ori	r24, 0x80	; 128
 1f0:	86 b9       	out	0x06, r24	; 6
 1f2:	08 95       	ret

000001f4 <__vector_16>:
 1f4:	1f 92       	push	r1
 1f6:	0f 92       	push	r0
 1f8:	0f b6       	in	r0, 0x3f	; 63
 1fa:	0f 92       	push	r0
 1fc:	11 24       	eor	r1, r1
 1fe:	2f 93       	push	r18
 200:	3f 93       	push	r19
 202:	4f 93       	push	r20
 204:	5f 93       	push	r21
 206:	6f 93       	push	r22
 208:	7f 93       	push	r23
 20a:	8f 93       	push	r24
 20c:	9f 93       	push	r25
 20e:	af 93       	push	r26
 210:	bf 93       	push	r27
 212:	ef 93       	push	r30
 214:	ff 93       	push	r31
 216:	e0 91 60 00 	lds	r30, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 21a:	f0 91 61 00 	lds	r31, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 21e:	30 97       	sbiw	r30, 0x00	; 0
 220:	09 f0       	breq	.+2      	; 0x224 <__vector_16+0x30>
 222:	09 95       	icall
 224:	ff 91       	pop	r31
 226:	ef 91       	pop	r30
 228:	bf 91       	pop	r27
 22a:	af 91       	pop	r26
 22c:	9f 91       	pop	r25
 22e:	8f 91       	pop	r24
 230:	7f 91       	pop	r23
 232:	6f 91       	pop	r22
 234:	5f 91       	pop	r21
 236:	4f 91       	pop	r20
 238:	3f 91       	pop	r19
 23a:	2f 91       	pop	r18
 23c:	0f 90       	pop	r0
 23e:	0f be       	out	0x3f, r0	; 63
 240:	0f 90       	pop	r0
 242:	1f 90       	pop	r1
 244:	18 95       	reti

00000246 <DIO_SetPortDirection>:
 246:	61 30       	cpi	r22, 0x01	; 1
 248:	a1 f4       	brne	.+40     	; 0x272 <DIO_SetPortDirection+0x2c>
 24a:	81 30       	cpi	r24, 0x01	; 1
 24c:	49 f0       	breq	.+18     	; 0x260 <DIO_SetPortDirection+0x1a>
 24e:	28 f0       	brcs	.+10     	; 0x25a <DIO_SetPortDirection+0x14>
 250:	82 30       	cpi	r24, 0x02	; 2
 252:	49 f0       	breq	.+18     	; 0x266 <DIO_SetPortDirection+0x20>
 254:	83 30       	cpi	r24, 0x03	; 3
 256:	51 f0       	breq	.+20     	; 0x26c <DIO_SetPortDirection+0x26>
 258:	08 95       	ret
 25a:	8f ef       	ldi	r24, 0xFF	; 255
 25c:	8a bb       	out	0x1a, r24	; 26
 25e:	08 95       	ret
 260:	8f ef       	ldi	r24, 0xFF	; 255
 262:	87 bb       	out	0x17, r24	; 23
 264:	08 95       	ret
 266:	8f ef       	ldi	r24, 0xFF	; 255
 268:	84 bb       	out	0x14, r24	; 20
 26a:	08 95       	ret
 26c:	8f ef       	ldi	r24, 0xFF	; 255
 26e:	81 bb       	out	0x11, r24	; 17
 270:	08 95       	ret
 272:	61 11       	cpse	r22, r1
 274:	0f c0       	rjmp	.+30     	; 0x294 <DIO_SetPortDirection+0x4e>
 276:	81 30       	cpi	r24, 0x01	; 1
 278:	41 f0       	breq	.+16     	; 0x28a <DIO_SetPortDirection+0x44>
 27a:	28 f0       	brcs	.+10     	; 0x286 <DIO_SetPortDirection+0x40>
 27c:	82 30       	cpi	r24, 0x02	; 2
 27e:	39 f0       	breq	.+14     	; 0x28e <DIO_SetPortDirection+0x48>
 280:	83 30       	cpi	r24, 0x03	; 3
 282:	39 f0       	breq	.+14     	; 0x292 <DIO_SetPortDirection+0x4c>
 284:	08 95       	ret
 286:	1a ba       	out	0x1a, r1	; 26
 288:	08 95       	ret
 28a:	17 ba       	out	0x17, r1	; 23
 28c:	08 95       	ret
 28e:	14 ba       	out	0x14, r1	; 20
 290:	08 95       	ret
 292:	11 ba       	out	0x11, r1	; 17
 294:	08 95       	ret

00000296 <DIO_SetPinDirection>:
 296:	41 11       	cpse	r20, r1
 298:	38 c0       	rjmp	.+112    	; 0x30a <DIO_SetPinDirection+0x74>
 29a:	81 30       	cpi	r24, 0x01	; 1
 29c:	91 f0       	breq	.+36     	; 0x2c2 <DIO_SetPinDirection+0x2c>
 29e:	28 f0       	brcs	.+10     	; 0x2aa <DIO_SetPinDirection+0x14>
 2a0:	82 30       	cpi	r24, 0x02	; 2
 2a2:	d9 f0       	breq	.+54     	; 0x2da <DIO_SetPinDirection+0x44>
 2a4:	83 30       	cpi	r24, 0x03	; 3
 2a6:	29 f1       	breq	.+74     	; 0x2f2 <DIO_SetPinDirection+0x5c>
 2a8:	08 95       	ret
 2aa:	2a b3       	in	r18, 0x1a	; 26
 2ac:	81 e0       	ldi	r24, 0x01	; 1
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	02 c0       	rjmp	.+4      	; 0x2b6 <DIO_SetPinDirection+0x20>
 2b2:	88 0f       	add	r24, r24
 2b4:	99 1f       	adc	r25, r25
 2b6:	6a 95       	dec	r22
 2b8:	e2 f7       	brpl	.-8      	; 0x2b2 <DIO_SetPinDirection+0x1c>
 2ba:	80 95       	com	r24
 2bc:	82 23       	and	r24, r18
 2be:	8a bb       	out	0x1a, r24	; 26
 2c0:	08 95       	ret
 2c2:	27 b3       	in	r18, 0x17	; 23
 2c4:	81 e0       	ldi	r24, 0x01	; 1
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	02 c0       	rjmp	.+4      	; 0x2ce <DIO_SetPinDirection+0x38>
 2ca:	88 0f       	add	r24, r24
 2cc:	99 1f       	adc	r25, r25
 2ce:	6a 95       	dec	r22
 2d0:	e2 f7       	brpl	.-8      	; 0x2ca <DIO_SetPinDirection+0x34>
 2d2:	80 95       	com	r24
 2d4:	82 23       	and	r24, r18
 2d6:	87 bb       	out	0x17, r24	; 23
 2d8:	08 95       	ret
 2da:	24 b3       	in	r18, 0x14	; 20
 2dc:	81 e0       	ldi	r24, 0x01	; 1
 2de:	90 e0       	ldi	r25, 0x00	; 0
 2e0:	02 c0       	rjmp	.+4      	; 0x2e6 <DIO_SetPinDirection+0x50>
 2e2:	88 0f       	add	r24, r24
 2e4:	99 1f       	adc	r25, r25
 2e6:	6a 95       	dec	r22
 2e8:	e2 f7       	brpl	.-8      	; 0x2e2 <DIO_SetPinDirection+0x4c>
 2ea:	80 95       	com	r24
 2ec:	82 23       	and	r24, r18
 2ee:	84 bb       	out	0x14, r24	; 20
 2f0:	08 95       	ret
 2f2:	21 b3       	in	r18, 0x11	; 17
 2f4:	81 e0       	ldi	r24, 0x01	; 1
 2f6:	90 e0       	ldi	r25, 0x00	; 0
 2f8:	02 c0       	rjmp	.+4      	; 0x2fe <DIO_SetPinDirection+0x68>
 2fa:	88 0f       	add	r24, r24
 2fc:	99 1f       	adc	r25, r25
 2fe:	6a 95       	dec	r22
 300:	e2 f7       	brpl	.-8      	; 0x2fa <DIO_SetPinDirection+0x64>
 302:	80 95       	com	r24
 304:	82 23       	and	r24, r18
 306:	81 bb       	out	0x11, r24	; 17
 308:	08 95       	ret
 30a:	41 30       	cpi	r20, 0x01	; 1
 30c:	99 f5       	brne	.+102    	; 0x374 <DIO_SetPinDirection+0xde>
 30e:	81 30       	cpi	r24, 0x01	; 1
 310:	89 f0       	breq	.+34     	; 0x334 <DIO_SetPinDirection+0x9e>
 312:	28 f0       	brcs	.+10     	; 0x31e <DIO_SetPinDirection+0x88>
 314:	82 30       	cpi	r24, 0x02	; 2
 316:	c9 f0       	breq	.+50     	; 0x34a <DIO_SetPinDirection+0xb4>
 318:	83 30       	cpi	r24, 0x03	; 3
 31a:	11 f1       	breq	.+68     	; 0x360 <DIO_SetPinDirection+0xca>
 31c:	08 95       	ret
 31e:	2a b3       	in	r18, 0x1a	; 26
 320:	81 e0       	ldi	r24, 0x01	; 1
 322:	90 e0       	ldi	r25, 0x00	; 0
 324:	02 c0       	rjmp	.+4      	; 0x32a <DIO_SetPinDirection+0x94>
 326:	88 0f       	add	r24, r24
 328:	99 1f       	adc	r25, r25
 32a:	6a 95       	dec	r22
 32c:	e2 f7       	brpl	.-8      	; 0x326 <DIO_SetPinDirection+0x90>
 32e:	82 2b       	or	r24, r18
 330:	8a bb       	out	0x1a, r24	; 26
 332:	08 95       	ret
 334:	27 b3       	in	r18, 0x17	; 23
 336:	81 e0       	ldi	r24, 0x01	; 1
 338:	90 e0       	ldi	r25, 0x00	; 0
 33a:	02 c0       	rjmp	.+4      	; 0x340 <DIO_SetPinDirection+0xaa>
 33c:	88 0f       	add	r24, r24
 33e:	99 1f       	adc	r25, r25
 340:	6a 95       	dec	r22
 342:	e2 f7       	brpl	.-8      	; 0x33c <DIO_SetPinDirection+0xa6>
 344:	82 2b       	or	r24, r18
 346:	87 bb       	out	0x17, r24	; 23
 348:	08 95       	ret
 34a:	24 b3       	in	r18, 0x14	; 20
 34c:	81 e0       	ldi	r24, 0x01	; 1
 34e:	90 e0       	ldi	r25, 0x00	; 0
 350:	02 c0       	rjmp	.+4      	; 0x356 <DIO_SetPinDirection+0xc0>
 352:	88 0f       	add	r24, r24
 354:	99 1f       	adc	r25, r25
 356:	6a 95       	dec	r22
 358:	e2 f7       	brpl	.-8      	; 0x352 <DIO_SetPinDirection+0xbc>
 35a:	82 2b       	or	r24, r18
 35c:	84 bb       	out	0x14, r24	; 20
 35e:	08 95       	ret
 360:	21 b3       	in	r18, 0x11	; 17
 362:	81 e0       	ldi	r24, 0x01	; 1
 364:	90 e0       	ldi	r25, 0x00	; 0
 366:	02 c0       	rjmp	.+4      	; 0x36c <DIO_SetPinDirection+0xd6>
 368:	88 0f       	add	r24, r24
 36a:	99 1f       	adc	r25, r25
 36c:	6a 95       	dec	r22
 36e:	e2 f7       	brpl	.-8      	; 0x368 <DIO_SetPinDirection+0xd2>
 370:	82 2b       	or	r24, r18
 372:	81 bb       	out	0x11, r24	; 17
 374:	08 95       	ret

00000376 <DIO_SetPinValue>:
 376:	41 30       	cpi	r20, 0x01	; 1
 378:	a1 f5       	brne	.+104    	; 0x3e2 <DIO_SetPinValue+0x6c>
 37a:	81 30       	cpi	r24, 0x01	; 1
 37c:	89 f0       	breq	.+34     	; 0x3a0 <DIO_SetPinValue+0x2a>
 37e:	28 f0       	brcs	.+10     	; 0x38a <DIO_SetPinValue+0x14>
 380:	82 30       	cpi	r24, 0x02	; 2
 382:	c9 f0       	breq	.+50     	; 0x3b6 <DIO_SetPinValue+0x40>
 384:	83 30       	cpi	r24, 0x03	; 3
 386:	11 f1       	breq	.+68     	; 0x3cc <DIO_SetPinValue+0x56>
 388:	08 95       	ret
 38a:	2b b3       	in	r18, 0x1b	; 27
 38c:	81 e0       	ldi	r24, 0x01	; 1
 38e:	90 e0       	ldi	r25, 0x00	; 0
 390:	02 c0       	rjmp	.+4      	; 0x396 <DIO_SetPinValue+0x20>
 392:	88 0f       	add	r24, r24
 394:	99 1f       	adc	r25, r25
 396:	6a 95       	dec	r22
 398:	e2 f7       	brpl	.-8      	; 0x392 <DIO_SetPinValue+0x1c>
 39a:	82 2b       	or	r24, r18
 39c:	8b bb       	out	0x1b, r24	; 27
 39e:	08 95       	ret
 3a0:	28 b3       	in	r18, 0x18	; 24
 3a2:	81 e0       	ldi	r24, 0x01	; 1
 3a4:	90 e0       	ldi	r25, 0x00	; 0
 3a6:	02 c0       	rjmp	.+4      	; 0x3ac <DIO_SetPinValue+0x36>
 3a8:	88 0f       	add	r24, r24
 3aa:	99 1f       	adc	r25, r25
 3ac:	6a 95       	dec	r22
 3ae:	e2 f7       	brpl	.-8      	; 0x3a8 <DIO_SetPinValue+0x32>
 3b0:	82 2b       	or	r24, r18
 3b2:	88 bb       	out	0x18, r24	; 24
 3b4:	08 95       	ret
 3b6:	25 b3       	in	r18, 0x15	; 21
 3b8:	81 e0       	ldi	r24, 0x01	; 1
 3ba:	90 e0       	ldi	r25, 0x00	; 0
 3bc:	02 c0       	rjmp	.+4      	; 0x3c2 <DIO_SetPinValue+0x4c>
 3be:	88 0f       	add	r24, r24
 3c0:	99 1f       	adc	r25, r25
 3c2:	6a 95       	dec	r22
 3c4:	e2 f7       	brpl	.-8      	; 0x3be <DIO_SetPinValue+0x48>
 3c6:	82 2b       	or	r24, r18
 3c8:	85 bb       	out	0x15, r24	; 21
 3ca:	08 95       	ret
 3cc:	22 b3       	in	r18, 0x12	; 18
 3ce:	81 e0       	ldi	r24, 0x01	; 1
 3d0:	90 e0       	ldi	r25, 0x00	; 0
 3d2:	02 c0       	rjmp	.+4      	; 0x3d8 <DIO_SetPinValue+0x62>
 3d4:	88 0f       	add	r24, r24
 3d6:	99 1f       	adc	r25, r25
 3d8:	6a 95       	dec	r22
 3da:	e2 f7       	brpl	.-8      	; 0x3d4 <DIO_SetPinValue+0x5e>
 3dc:	82 2b       	or	r24, r18
 3de:	82 bb       	out	0x12, r24	; 18
 3e0:	08 95       	ret
 3e2:	41 11       	cpse	r20, r1
 3e4:	37 c0       	rjmp	.+110    	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
 3e6:	81 30       	cpi	r24, 0x01	; 1
 3e8:	91 f0       	breq	.+36     	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
 3ea:	28 f0       	brcs	.+10     	; 0x3f6 <DIO_SetPinValue+0x80>
 3ec:	82 30       	cpi	r24, 0x02	; 2
 3ee:	d9 f0       	breq	.+54     	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 3f0:	83 30       	cpi	r24, 0x03	; 3
 3f2:	29 f1       	breq	.+74     	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 3f4:	08 95       	ret
 3f6:	2b b3       	in	r18, 0x1b	; 27
 3f8:	81 e0       	ldi	r24, 0x01	; 1
 3fa:	90 e0       	ldi	r25, 0x00	; 0
 3fc:	02 c0       	rjmp	.+4      	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 3fe:	88 0f       	add	r24, r24
 400:	99 1f       	adc	r25, r25
 402:	6a 95       	dec	r22
 404:	e2 f7       	brpl	.-8      	; 0x3fe <DIO_SetPinValue+0x88>
 406:	80 95       	com	r24
 408:	82 23       	and	r24, r18
 40a:	8b bb       	out	0x1b, r24	; 27
 40c:	08 95       	ret
 40e:	28 b3       	in	r18, 0x18	; 24
 410:	81 e0       	ldi	r24, 0x01	; 1
 412:	90 e0       	ldi	r25, 0x00	; 0
 414:	02 c0       	rjmp	.+4      	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 416:	88 0f       	add	r24, r24
 418:	99 1f       	adc	r25, r25
 41a:	6a 95       	dec	r22
 41c:	e2 f7       	brpl	.-8      	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 41e:	80 95       	com	r24
 420:	82 23       	and	r24, r18
 422:	88 bb       	out	0x18, r24	; 24
 424:	08 95       	ret
 426:	25 b3       	in	r18, 0x15	; 21
 428:	81 e0       	ldi	r24, 0x01	; 1
 42a:	90 e0       	ldi	r25, 0x00	; 0
 42c:	02 c0       	rjmp	.+4      	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 42e:	88 0f       	add	r24, r24
 430:	99 1f       	adc	r25, r25
 432:	6a 95       	dec	r22
 434:	e2 f7       	brpl	.-8      	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 436:	80 95       	com	r24
 438:	82 23       	and	r24, r18
 43a:	85 bb       	out	0x15, r24	; 21
 43c:	08 95       	ret
 43e:	22 b3       	in	r18, 0x12	; 18
 440:	81 e0       	ldi	r24, 0x01	; 1
 442:	90 e0       	ldi	r25, 0x00	; 0
 444:	02 c0       	rjmp	.+4      	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
 446:	88 0f       	add	r24, r24
 448:	99 1f       	adc	r25, r25
 44a:	6a 95       	dec	r22
 44c:	e2 f7       	brpl	.-8      	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
 44e:	80 95       	com	r24
 450:	82 23       	and	r24, r18
 452:	82 bb       	out	0x12, r24	; 18
 454:	08 95       	ret

00000456 <__vector_1>:
 456:	1f 92       	push	r1
 458:	0f 92       	push	r0
 45a:	0f b6       	in	r0, 0x3f	; 63
 45c:	0f 92       	push	r0
 45e:	11 24       	eor	r1, r1
 460:	2f 93       	push	r18
 462:	3f 93       	push	r19
 464:	4f 93       	push	r20
 466:	5f 93       	push	r21
 468:	6f 93       	push	r22
 46a:	7f 93       	push	r23
 46c:	8f 93       	push	r24
 46e:	9f 93       	push	r25
 470:	af 93       	push	r26
 472:	bf 93       	push	r27
 474:	ef 93       	push	r30
 476:	ff 93       	push	r31
 478:	e0 91 62 00 	lds	r30, 0x0062	; 0x800062 <EXTI_CallBackPtr>
 47c:	f0 91 63 00 	lds	r31, 0x0063	; 0x800063 <EXTI_CallBackPtr+0x1>
 480:	30 97       	sbiw	r30, 0x00	; 0
 482:	09 f0       	breq	.+2      	; 0x486 <__vector_1+0x30>
 484:	09 95       	icall
 486:	ff 91       	pop	r31
 488:	ef 91       	pop	r30
 48a:	bf 91       	pop	r27
 48c:	af 91       	pop	r26
 48e:	9f 91       	pop	r25
 490:	8f 91       	pop	r24
 492:	7f 91       	pop	r23
 494:	6f 91       	pop	r22
 496:	5f 91       	pop	r21
 498:	4f 91       	pop	r20
 49a:	3f 91       	pop	r19
 49c:	2f 91       	pop	r18
 49e:	0f 90       	pop	r0
 4a0:	0f be       	out	0x3f, r0	; 63
 4a2:	0f 90       	pop	r0
 4a4:	1f 90       	pop	r1
 4a6:	18 95       	reti

000004a8 <SPI_Slave_Intialize>:
  }
  
  void SPI_Slave_Intialize()
  {
	  //1) set MOSI ,SCK,SS as input pins and MISO to output pin
	   DIO_SetPinDirection(PORTB,4,Input);//SS
 4a8:	40 e0       	ldi	r20, 0x00	; 0
 4aa:	64 e0       	ldi	r22, 0x04	; 4
 4ac:	81 e0       	ldi	r24, 0x01	; 1
 4ae:	0e 94 4b 01 	call	0x296	; 0x296 <DIO_SetPinDirection>
	   DIO_SetPinDirection(PORTB,5,Input);//MOSI
 4b2:	40 e0       	ldi	r20, 0x00	; 0
 4b4:	65 e0       	ldi	r22, 0x05	; 5
 4b6:	81 e0       	ldi	r24, 0x01	; 1
 4b8:	0e 94 4b 01 	call	0x296	; 0x296 <DIO_SetPinDirection>
	   DIO_SetPinDirection(PORTB,7,Input);//SCK
 4bc:	40 e0       	ldi	r20, 0x00	; 0
 4be:	67 e0       	ldi	r22, 0x07	; 7
 4c0:	81 e0       	ldi	r24, 0x01	; 1
 4c2:	0e 94 4b 01 	call	0x296	; 0x296 <DIO_SetPinDirection>
	   DIO_SetPinDirection(PORTB,6,Output);//MISO
 4c6:	41 e0       	ldi	r20, 0x01	; 1
 4c8:	66 e0       	ldi	r22, 0x06	; 6
 4ca:	81 e0       	ldi	r24, 0x01	; 1
 4cc:	0e 94 4b 01 	call	0x296	; 0x296 <DIO_SetPinDirection>
	   
	   
	   //2)enable SPI
	   SetBIT(SPCR_REG,6);
 4d0:	8d b1       	in	r24, 0x0d	; 13
 4d2:	80 64       	ori	r24, 0x40	; 64
 4d4:	8d b9       	out	0x0d, r24	; 13
	   //3) enable SPI in slave mood
	   SPCR_REG |= SPI_Slave_Mode;
 4d6:	8d b1       	in	r24, 0x0d	; 13
 4d8:	8d b9       	out	0x0d, r24	; 13
	   	//4) Choose prescaling
	   	SPCR_REG |= SPI_Prescaling_Selector;
 4da:	8d b1       	in	r24, 0x0d	; 13
 4dc:	81 60       	ori	r24, 0x01	; 1
 4de:	8d b9       	out	0x0d, r24	; 13
	   	//5) choose speed
	   	SPSR_REG |= SPI_Speed_Selector;
 4e0:	8e b1       	in	r24, 0x0e	; 14
 4e2:	8e b9       	out	0x0e, r24	; 14
 4e4:	08 95       	ret

000004e6 <SPI_Slave_Recieve>:
  }
   uint8 SPI_Slave_Recieve()
   {
	   //1)sET DUMMY VALUE
	   SPDR_REG=0xFF;
 4e6:	8f ef       	ldi	r24, 0xFF	; 255
 4e8:	8f b9       	out	0x0f, r24	; 15
	   //2)WAIT UNTIL RECIEVE COMPLETE
		while(!GetBIT(SPSR_REG,7));
 4ea:	77 9b       	sbis	0x0e, 7	; 14
 4ec:	fe cf       	rjmp	.-4      	; 0x4ea <SPI_Slave_Recieve+0x4>
		uint8 flusher =SPDR_REG;
 4ee:	8f b1       	in	r24, 0x0f	; 15
		return(flusher);
   }
 4f0:	08 95       	ret

000004f2 <__vector_11>:
 4f2:	1f 92       	push	r1
 4f4:	0f 92       	push	r0
 4f6:	0f b6       	in	r0, 0x3f	; 63
 4f8:	0f 92       	push	r0
 4fa:	11 24       	eor	r1, r1
 4fc:	2f 93       	push	r18
 4fe:	3f 93       	push	r19
 500:	4f 93       	push	r20
 502:	5f 93       	push	r21
 504:	6f 93       	push	r22
 506:	7f 93       	push	r23
 508:	8f 93       	push	r24
 50a:	9f 93       	push	r25
 50c:	af 93       	push	r26
 50e:	bf 93       	push	r27
 510:	ef 93       	push	r30
 512:	ff 93       	push	r31
 514:	e0 91 64 00 	lds	r30, 0x0064	; 0x800064 <Timer_CallBackPtr>
 518:	f0 91 65 00 	lds	r31, 0x0065	; 0x800065 <Timer_CallBackPtr+0x1>
 51c:	30 97       	sbiw	r30, 0x00	; 0
 51e:	09 f0       	breq	.+2      	; 0x522 <__vector_11+0x30>
 520:	09 95       	icall
 522:	ff 91       	pop	r31
 524:	ef 91       	pop	r30
 526:	bf 91       	pop	r27
 528:	af 91       	pop	r26
 52a:	9f 91       	pop	r25
 52c:	8f 91       	pop	r24
 52e:	7f 91       	pop	r23
 530:	6f 91       	pop	r22
 532:	5f 91       	pop	r21
 534:	4f 91       	pop	r20
 536:	3f 91       	pop	r19
 538:	2f 91       	pop	r18
 53a:	0f 90       	pop	r0
 53c:	0f be       	out	0x3f, r0	; 63
 53e:	0f 90       	pop	r0
 540:	1f 90       	pop	r1
 542:	18 95       	reti

00000544 <_exit>:
 544:	f8 94       	cli

00000546 <__stop_program>:
 546:	ff cf       	rjmp	.-2      	; 0x546 <__stop_program>
