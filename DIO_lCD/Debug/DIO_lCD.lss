
DIO_lCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000007fa  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000086e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000b  00800060  00800060  0000086e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000086e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000008a0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001a8  00000000  00000000  000008dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001a2d  00000000  00000000  00000a84  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000bc6  00000000  00000000  000024b1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e95  00000000  00000000  00003077  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003c0  00000000  00000000  00003f0c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007a2  00000000  00000000  000042cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000e98  00000000  00000000  00004a6e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000138  00000000  00000000  00005906  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 bc 02 	jmp	0x578	; 0x578 <__vector_1>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 14 03 	jmp	0x628	; 0x628 <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 eb 01 	jmp	0x3d6	; 0x3d6 <__vector_16>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea ef       	ldi	r30, 0xFA	; 250
  68:	f7 e0       	ldi	r31, 0x07	; 7
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ab 36       	cpi	r26, 0x6B	; 107
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <main>
  8a:	0c 94 fb 03 	jmp	0x7f6	; 0x7f6 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <KeyPad>:

#include "avr/delay.h"
uint8 KeyPad()
{
	
	DIO_SetPinValue(PORTB,0,HIGH);
  92:	41 e0       	ldi	r20, 0x01	; 1
  94:	60 e0       	ldi	r22, 0x00	; 0
  96:	81 e0       	ldi	r24, 0x01	; 1
  98:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_SetPinValue>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  9c:	89 ef       	ldi	r24, 0xF9	; 249
  9e:	90 e0       	ldi	r25, 0x00	; 0
  a0:	01 97       	sbiw	r24, 0x01	; 1
  a2:	f1 f7       	brne	.-4      	; 0xa0 <KeyPad+0xe>
  a4:	00 c0       	rjmp	.+0      	; 0xa6 <KeyPad+0x14>
  a6:	00 00       	nop
	_delay_ms(1);
	if((PIN_keyPad & 0b00010000)) return('1');
  a8:	b4 99       	sbic	0x16, 4	; 22
  aa:	55 c0       	rjmp	.+170    	; 0x156 <KeyPad+0xc4>
	if((PIN_keyPad & 0b00100000)) return('2');
  ac:	b5 99       	sbic	0x16, 5	; 22
  ae:	55 c0       	rjmp	.+170    	; 0x15a <KeyPad+0xc8>
	if((PIN_keyPad & 0b01000000)) return('3');
  b0:	b6 99       	sbic	0x16, 6	; 22
  b2:	55 c0       	rjmp	.+170    	; 0x15e <KeyPad+0xcc>
	if((PIN_keyPad & 0b10000000)) return('A');
  b4:	b7 99       	sbic	0x16, 7	; 22
  b6:	55 c0       	rjmp	.+170    	; 0x162 <KeyPad+0xd0>
	
	DIO_SetPinValue(PORTB,0,LOW);
  b8:	40 e0       	ldi	r20, 0x00	; 0
  ba:	60 e0       	ldi	r22, 0x00	; 0
  bc:	81 e0       	ldi	r24, 0x01	; 1
  be:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_SetPinValue>
	DIO_SetPinValue(PORTB,1,HIGH);
  c2:	41 e0       	ldi	r20, 0x01	; 1
  c4:	61 e0       	ldi	r22, 0x01	; 1
  c6:	81 e0       	ldi	r24, 0x01	; 1
  c8:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_SetPinValue>
  cc:	89 ef       	ldi	r24, 0xF9	; 249
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	01 97       	sbiw	r24, 0x01	; 1
  d2:	f1 f7       	brne	.-4      	; 0xd0 <KeyPad+0x3e>
  d4:	00 c0       	rjmp	.+0      	; 0xd6 <KeyPad+0x44>
  d6:	00 00       	nop
	_delay_ms(1);
	if((PIN_keyPad & 0b00010000)) return('4');
  d8:	b4 99       	sbic	0x16, 4	; 22
  da:	45 c0       	rjmp	.+138    	; 0x166 <KeyPad+0xd4>
	if((PIN_keyPad & 0b00100000)) return('5');
  dc:	b5 99       	sbic	0x16, 5	; 22
  de:	45 c0       	rjmp	.+138    	; 0x16a <KeyPad+0xd8>
	if((PIN_keyPad & 0b01000000)) return('6');
  e0:	b6 99       	sbic	0x16, 6	; 22
  e2:	45 c0       	rjmp	.+138    	; 0x16e <KeyPad+0xdc>
	if((PIN_keyPad & 0b10000000)) return('B');
  e4:	b7 99       	sbic	0x16, 7	; 22
  e6:	45 c0       	rjmp	.+138    	; 0x172 <KeyPad+0xe0>
	
	
	DIO_SetPinValue(PORTB,1,LOW);
  e8:	40 e0       	ldi	r20, 0x00	; 0
  ea:	61 e0       	ldi	r22, 0x01	; 1
  ec:	81 e0       	ldi	r24, 0x01	; 1
  ee:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_SetPinValue>
	DIO_SetPinValue(PORTB,2,HIGH);
  f2:	41 e0       	ldi	r20, 0x01	; 1
  f4:	62 e0       	ldi	r22, 0x02	; 2
  f6:	81 e0       	ldi	r24, 0x01	; 1
  f8:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_SetPinValue>
  fc:	89 ef       	ldi	r24, 0xF9	; 249
  fe:	90 e0       	ldi	r25, 0x00	; 0
 100:	01 97       	sbiw	r24, 0x01	; 1
 102:	f1 f7       	brne	.-4      	; 0x100 <KeyPad+0x6e>
 104:	00 c0       	rjmp	.+0      	; 0x106 <KeyPad+0x74>
 106:	00 00       	nop
_delay_ms(1);
	if((PIN_keyPad & 0b00010000)) return('7');
 108:	b4 99       	sbic	0x16, 4	; 22
 10a:	35 c0       	rjmp	.+106    	; 0x176 <KeyPad+0xe4>
	if((PIN_keyPad & 0b00100000)) return('8');
 10c:	b5 99       	sbic	0x16, 5	; 22
 10e:	35 c0       	rjmp	.+106    	; 0x17a <KeyPad+0xe8>
	if((PIN_keyPad & 0b01000000)) return('9');
 110:	b6 99       	sbic	0x16, 6	; 22
 112:	35 c0       	rjmp	.+106    	; 0x17e <KeyPad+0xec>
	if((PIN_keyPad & 0b10000000)) return('C');
 114:	b7 99       	sbic	0x16, 7	; 22
 116:	35 c0       	rjmp	.+106    	; 0x182 <KeyPad+0xf0>
	
	
	DIO_SetPinValue(PORTB,2,LOW);
 118:	40 e0       	ldi	r20, 0x00	; 0
 11a:	62 e0       	ldi	r22, 0x02	; 2
 11c:	81 e0       	ldi	r24, 0x01	; 1
 11e:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_SetPinValue>
	DIO_SetPinValue(PORTB,3,HIGH);
 122:	41 e0       	ldi	r20, 0x01	; 1
 124:	63 e0       	ldi	r22, 0x03	; 3
 126:	81 e0       	ldi	r24, 0x01	; 1
 128:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_SetPinValue>
 12c:	89 ef       	ldi	r24, 0xF9	; 249
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	01 97       	sbiw	r24, 0x01	; 1
 132:	f1 f7       	brne	.-4      	; 0x130 <KeyPad+0x9e>
 134:	00 c0       	rjmp	.+0      	; 0x136 <KeyPad+0xa4>
 136:	00 00       	nop
_delay_ms(1);
	if((PIN_keyPad & 0b00010000)) return('*');
 138:	b4 99       	sbic	0x16, 4	; 22
 13a:	25 c0       	rjmp	.+74     	; 0x186 <KeyPad+0xf4>
	if((PIN_keyPad & 0b00100000)) return('0');
 13c:	b5 99       	sbic	0x16, 5	; 22
 13e:	25 c0       	rjmp	.+74     	; 0x18a <KeyPad+0xf8>
	if((PIN_keyPad & 0b01000000)) return('#');
 140:	b6 99       	sbic	0x16, 6	; 22
 142:	25 c0       	rjmp	.+74     	; 0x18e <KeyPad+0xfc>
	if((PIN_keyPad & 0b10000000)) return('D');
 144:	b7 99       	sbic	0x16, 7	; 22
 146:	25 c0       	rjmp	.+74     	; 0x192 <KeyPad+0x100>
	DIO_SetPinValue(PORTB,3,LOW);
 148:	40 e0       	ldi	r20, 0x00	; 0
 14a:	63 e0       	ldi	r22, 0x03	; 3
 14c:	81 e0       	ldi	r24, 0x01	; 1
 14e:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_SetPinValue>

	return('N');
 152:	8e e4       	ldi	r24, 0x4E	; 78
 154:	08 95       	ret
uint8 KeyPad()
{
	
	DIO_SetPinValue(PORTB,0,HIGH);
	_delay_ms(1);
	if((PIN_keyPad & 0b00010000)) return('1');
 156:	81 e3       	ldi	r24, 0x31	; 49
 158:	08 95       	ret
	if((PIN_keyPad & 0b00100000)) return('2');
 15a:	82 e3       	ldi	r24, 0x32	; 50
 15c:	08 95       	ret
	if((PIN_keyPad & 0b01000000)) return('3');
 15e:	83 e3       	ldi	r24, 0x33	; 51
 160:	08 95       	ret
	if((PIN_keyPad & 0b10000000)) return('A');
 162:	81 e4       	ldi	r24, 0x41	; 65
 164:	08 95       	ret
	
	DIO_SetPinValue(PORTB,0,LOW);
	DIO_SetPinValue(PORTB,1,HIGH);
	_delay_ms(1);
	if((PIN_keyPad & 0b00010000)) return('4');
 166:	84 e3       	ldi	r24, 0x34	; 52
 168:	08 95       	ret
	if((PIN_keyPad & 0b00100000)) return('5');
 16a:	85 e3       	ldi	r24, 0x35	; 53
 16c:	08 95       	ret
	if((PIN_keyPad & 0b01000000)) return('6');
 16e:	86 e3       	ldi	r24, 0x36	; 54
 170:	08 95       	ret
	if((PIN_keyPad & 0b10000000)) return('B');
 172:	82 e4       	ldi	r24, 0x42	; 66
 174:	08 95       	ret
	
	
	DIO_SetPinValue(PORTB,1,LOW);
	DIO_SetPinValue(PORTB,2,HIGH);
_delay_ms(1);
	if((PIN_keyPad & 0b00010000)) return('7');
 176:	87 e3       	ldi	r24, 0x37	; 55
 178:	08 95       	ret
	if((PIN_keyPad & 0b00100000)) return('8');
 17a:	88 e3       	ldi	r24, 0x38	; 56
 17c:	08 95       	ret
	if((PIN_keyPad & 0b01000000)) return('9');
 17e:	89 e3       	ldi	r24, 0x39	; 57
 180:	08 95       	ret
	if((PIN_keyPad & 0b10000000)) return('C');
 182:	83 e4       	ldi	r24, 0x43	; 67
 184:	08 95       	ret
	
	
	DIO_SetPinValue(PORTB,2,LOW);
	DIO_SetPinValue(PORTB,3,HIGH);
_delay_ms(1);
	if((PIN_keyPad & 0b00010000)) return('*');
 186:	8a e2       	ldi	r24, 0x2A	; 42
 188:	08 95       	ret
	if((PIN_keyPad & 0b00100000)) return('0');
 18a:	80 e3       	ldi	r24, 0x30	; 48
 18c:	08 95       	ret
	if((PIN_keyPad & 0b01000000)) return('#');
 18e:	83 e2       	ldi	r24, 0x23	; 35
 190:	08 95       	ret
	if((PIN_keyPad & 0b10000000)) return('D');
 192:	84 e4       	ldi	r24, 0x44	; 68
	DIO_SetPinValue(PORTB,3,LOW);

	return('N');
			
 194:	08 95       	ret

00000196 <LCD_WriteCmd>:


static uint8 InitStepFinished = 0;

void LCD_WriteCmd(uint8 Cmd)
{
 196:	cf 93       	push	r28
 198:	c8 2f       	mov	r28, r24
	DIO_SetPinValue(PORTC,PIN0,LOW);//RS and R/W should be low to write command
 19a:	40 e0       	ldi	r20, 0x00	; 0
 19c:	60 e0       	ldi	r22, 0x00	; 0
 19e:	82 e0       	ldi	r24, 0x02	; 2
 1a0:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_SetPinValue>
	DIO_SetPinValue(PORTC,PIN1,LOW);
 1a4:	40 e0       	ldi	r20, 0x00	; 0
 1a6:	61 e0       	ldi	r22, 0x01	; 1
 1a8:	82 e0       	ldi	r24, 0x02	; 2
 1aa:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_SetPinValue>
	
	
	DIO_SetPinValue(PORTC,PIN4,GetBIT(Cmd,4));
 1ae:	c4 fb       	bst	r28, 4
 1b0:	44 27       	eor	r20, r20
 1b2:	40 f9       	bld	r20, 0
 1b4:	64 e0       	ldi	r22, 0x04	; 4
 1b6:	82 e0       	ldi	r24, 0x02	; 2
 1b8:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_SetPinValue>
	DIO_SetPinValue(PORTC,PIN5,GetBIT(Cmd,5));
 1bc:	c5 fb       	bst	r28, 5
 1be:	44 27       	eor	r20, r20
 1c0:	40 f9       	bld	r20, 0
 1c2:	65 e0       	ldi	r22, 0x05	; 5
 1c4:	82 e0       	ldi	r24, 0x02	; 2
 1c6:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_SetPinValue>
	DIO_SetPinValue(PORTC,PIN6,GetBIT(Cmd,6));
 1ca:	c6 fb       	bst	r28, 6
 1cc:	44 27       	eor	r20, r20
 1ce:	40 f9       	bld	r20, 0
 1d0:	66 e0       	ldi	r22, 0x06	; 6
 1d2:	82 e0       	ldi	r24, 0x02	; 2
 1d4:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_SetPinValue>
	DIO_SetPinValue(PORTC,PIN7,GetBIT(Cmd,7));
 1d8:	4c 2f       	mov	r20, r28
 1da:	44 1f       	adc	r20, r20
 1dc:	44 27       	eor	r20, r20
 1de:	44 1f       	adc	r20, r20
 1e0:	67 e0       	ldi	r22, 0x07	; 7
 1e2:	82 e0       	ldi	r24, 0x02	; 2
 1e4:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_SetPinValue>
	
	//delay and reading by down Edge
	
					//
					DIO_SetPinValue(PORTC,PIN2,HIGH);
 1e8:	41 e0       	ldi	r20, 0x01	; 1
 1ea:	62 e0       	ldi	r22, 0x02	; 2
 1ec:	82 e0       	ldi	r24, 0x02	; 2
 1ee:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_SetPinValue>
 1f2:	83 ec       	ldi	r24, 0xC3	; 195
 1f4:	99 e0       	ldi	r25, 0x09	; 9
 1f6:	01 97       	sbiw	r24, 0x01	; 1
 1f8:	f1 f7       	brne	.-4      	; 0x1f6 <LCD_WriteCmd+0x60>
 1fa:	00 c0       	rjmp	.+0      	; 0x1fc <LCD_WriteCmd+0x66>
 1fc:	00 00       	nop
					_delay_ms(1);                       //delay for reading block
					DIO_SetPinValue(PORTC,PIN2,LOW);
 1fe:	40 e0       	ldi	r20, 0x00	; 0
 200:	62 e0       	ldi	r22, 0x02	; 2
 202:	82 e0       	ldi	r24, 0x02	; 2
 204:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_SetPinValue>
	
					//
	if(InitStepFinished)
 208:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 20c:	88 23       	and	r24, r24
 20e:	59 f1       	breq	.+86     	; 0x266 <LCD_WriteCmd+0xd0>
	{
		
		DIO_SetPinValue(PORTC,PIN4,GetBIT(Cmd,0));
 210:	4c 2f       	mov	r20, r28
 212:	41 70       	andi	r20, 0x01	; 1
 214:	64 e0       	ldi	r22, 0x04	; 4
 216:	82 e0       	ldi	r24, 0x02	; 2
 218:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_SetPinValue>
		DIO_SetPinValue(PORTC,PIN5,GetBIT(Cmd,1));
 21c:	c1 fb       	bst	r28, 1
 21e:	44 27       	eor	r20, r20
 220:	40 f9       	bld	r20, 0
 222:	65 e0       	ldi	r22, 0x05	; 5
 224:	82 e0       	ldi	r24, 0x02	; 2
 226:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_SetPinValue>
		DIO_SetPinValue(PORTC,PIN6,GetBIT(Cmd,2));
 22a:	c2 fb       	bst	r28, 2
 22c:	44 27       	eor	r20, r20
 22e:	40 f9       	bld	r20, 0
 230:	66 e0       	ldi	r22, 0x06	; 6
 232:	82 e0       	ldi	r24, 0x02	; 2
 234:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_SetPinValue>
		DIO_SetPinValue(PORTC,PIN7,GetBIT(Cmd,3));
 238:	c3 fb       	bst	r28, 3
 23a:	44 27       	eor	r20, r20
 23c:	40 f9       	bld	r20, 0
 23e:	67 e0       	ldi	r22, 0x07	; 7
 240:	82 e0       	ldi	r24, 0x02	; 2
 242:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_SetPinValue>

		//delay and reading by down Edge
		
					//
					DIO_SetPinValue(PORTC,PIN2,HIGH);
 246:	41 e0       	ldi	r20, 0x01	; 1
 248:	62 e0       	ldi	r22, 0x02	; 2
 24a:	82 e0       	ldi	r24, 0x02	; 2
 24c:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_SetPinValue>
 250:	83 ec       	ldi	r24, 0xC3	; 195
 252:	99 e0       	ldi	r25, 0x09	; 9
 254:	01 97       	sbiw	r24, 0x01	; 1
 256:	f1 f7       	brne	.-4      	; 0x254 <LCD_WriteCmd+0xbe>
 258:	00 c0       	rjmp	.+0      	; 0x25a <LCD_WriteCmd+0xc4>
 25a:	00 00       	nop
					_delay_ms(1);                       //delay for reading block
					DIO_SetPinValue(PORTC,PIN2,LOW);
 25c:	40 e0       	ldi	r20, 0x00	; 0
 25e:	62 e0       	ldi	r22, 0x02	; 2
 260:	82 e0       	ldi	r24, 0x02	; 2
 262:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_SetPinValue>
		
					//
	}
	
	
}
 266:	cf 91       	pop	r28
 268:	08 95       	ret

0000026a <LCD_Intialize>:
void LCD_Intialize()
{
	DIO_SetPortDirection(PORTC,Output);
 26a:	61 e0       	ldi	r22, 0x01	; 1
 26c:	82 e0       	ldi	r24, 0x02	; 2
 26e:	0e 94 14 02 	call	0x428	; 0x428 <DIO_SetPortDirection>
 272:	2f e5       	ldi	r18, 0x5F	; 95
 274:	8a ee       	ldi	r24, 0xEA	; 234
 276:	90 e0       	ldi	r25, 0x00	; 0
 278:	21 50       	subi	r18, 0x01	; 1
 27a:	80 40       	sbci	r24, 0x00	; 0
 27c:	90 40       	sbci	r25, 0x00	; 0
 27e:	e1 f7       	brne	.-8      	; 0x278 <LCD_Intialize+0xe>
 280:	00 c0       	rjmp	.+0      	; 0x282 <LCD_Intialize+0x18>
 282:	00 00       	nop
	_delay_ms(30);
	LCD_WriteCmd(0x20);///intialize orders
 284:	80 e2       	ldi	r24, 0x20	; 32
 286:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_WriteCmd>
	LCD_WriteCmd(0x20);
 28a:	80 e2       	ldi	r24, 0x20	; 32
 28c:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_WriteCmd>
	LCD_WriteCmd(0x80);
 290:	80 e8       	ldi	r24, 0x80	; 128
 292:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_WriteCmd>
 296:	83 ec       	ldi	r24, 0xC3	; 195
 298:	99 e0       	ldi	r25, 0x09	; 9
 29a:	01 97       	sbiw	r24, 0x01	; 1
 29c:	f1 f7       	brne	.-4      	; 0x29a <LCD_Intialize+0x30>
 29e:	00 c0       	rjmp	.+0      	; 0x2a0 <LCD_Intialize+0x36>
 2a0:	00 00       	nop
	_delay_ms(1);
	LCD_WriteCmd(0x00);
 2a2:	80 e0       	ldi	r24, 0x00	; 0
 2a4:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_WriteCmd>
	LCD_WriteCmd(0xf0);
 2a8:	80 ef       	ldi	r24, 0xF0	; 240
 2aa:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_WriteCmd>
 2ae:	83 ec       	ldi	r24, 0xC3	; 195
 2b0:	99 e0       	ldi	r25, 0x09	; 9
 2b2:	01 97       	sbiw	r24, 0x01	; 1
 2b4:	f1 f7       	brne	.-4      	; 0x2b2 <LCD_Intialize+0x48>
 2b6:	00 c0       	rjmp	.+0      	; 0x2b8 <LCD_Intialize+0x4e>
 2b8:	00 00       	nop
	_delay_ms(1);
	LCD_WriteCmd(0x00);
 2ba:	80 e0       	ldi	r24, 0x00	; 0
 2bc:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_WriteCmd>
	LCD_WriteCmd(0x10);
 2c0:	80 e1       	ldi	r24, 0x10	; 16
 2c2:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_WriteCmd>
 2c6:	87 e8       	ldi	r24, 0x87	; 135
 2c8:	93 e1       	ldi	r25, 0x13	; 19
 2ca:	01 97       	sbiw	r24, 0x01	; 1
 2cc:	f1 f7       	brne	.-4      	; 0x2ca <LCD_Intialize+0x60>
 2ce:	00 c0       	rjmp	.+0      	; 0x2d0 <LCD_Intialize+0x66>
 2d0:	00 00       	nop
	_delay_ms(2);
	
	InitStepFinished=1;
 2d2:	81 e0       	ldi	r24, 0x01	; 1
 2d4:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 2d8:	08 95       	ret

000002da <LCD_WriteData>:
	
}

void LCD_WriteData(uint8 Data)
{
 2da:	cf 93       	push	r28
 2dc:	c8 2f       	mov	r28, r24
		DIO_SetPinValue(PORTC,PIN0,HIGH);//RS and R/W should be high and  low to write Data
 2de:	41 e0       	ldi	r20, 0x01	; 1
 2e0:	60 e0       	ldi	r22, 0x00	; 0
 2e2:	82 e0       	ldi	r24, 0x02	; 2
 2e4:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_SetPinValue>
		DIO_SetPinValue(PORTC,PIN1,LOW);
 2e8:	40 e0       	ldi	r20, 0x00	; 0
 2ea:	61 e0       	ldi	r22, 0x01	; 1
 2ec:	82 e0       	ldi	r24, 0x02	; 2
 2ee:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_SetPinValue>
	
	
		DIO_SetPinValue(PORTC,PIN4,GetBIT(Data,4));
 2f2:	c4 fb       	bst	r28, 4
 2f4:	44 27       	eor	r20, r20
 2f6:	40 f9       	bld	r20, 0
 2f8:	64 e0       	ldi	r22, 0x04	; 4
 2fa:	82 e0       	ldi	r24, 0x02	; 2
 2fc:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_SetPinValue>
		DIO_SetPinValue(PORTC,PIN5,GetBIT(Data,5));
 300:	c5 fb       	bst	r28, 5
 302:	44 27       	eor	r20, r20
 304:	40 f9       	bld	r20, 0
 306:	65 e0       	ldi	r22, 0x05	; 5
 308:	82 e0       	ldi	r24, 0x02	; 2
 30a:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_SetPinValue>
		DIO_SetPinValue(PORTC,PIN6,GetBIT(Data,6));
 30e:	c6 fb       	bst	r28, 6
 310:	44 27       	eor	r20, r20
 312:	40 f9       	bld	r20, 0
 314:	66 e0       	ldi	r22, 0x06	; 6
 316:	82 e0       	ldi	r24, 0x02	; 2
 318:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_SetPinValue>
		DIO_SetPinValue(PORTC,PIN7,GetBIT(Data,7));
 31c:	4c 2f       	mov	r20, r28
 31e:	44 1f       	adc	r20, r20
 320:	44 27       	eor	r20, r20
 322:	44 1f       	adc	r20, r20
 324:	67 e0       	ldi	r22, 0x07	; 7
 326:	82 e0       	ldi	r24, 0x02	; 2
 328:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_SetPinValue>
	
							//delay and reading by down Edge
	
							//
							DIO_SetPinValue(PORTC,PIN2,HIGH);
 32c:	41 e0       	ldi	r20, 0x01	; 1
 32e:	62 e0       	ldi	r22, 0x02	; 2
 330:	82 e0       	ldi	r24, 0x02	; 2
 332:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_SetPinValue>
 336:	83 ec       	ldi	r24, 0xC3	; 195
 338:	99 e0       	ldi	r25, 0x09	; 9
 33a:	01 97       	sbiw	r24, 0x01	; 1
 33c:	f1 f7       	brne	.-4      	; 0x33a <LCD_WriteData+0x60>
 33e:	00 c0       	rjmp	.+0      	; 0x340 <LCD_WriteData+0x66>
 340:	00 00       	nop
							_delay_ms(1);                       //delay for reading block
							DIO_SetPinValue(PORTC,PIN2,LOW);
 342:	40 e0       	ldi	r20, 0x00	; 0
 344:	62 e0       	ldi	r22, 0x02	; 2
 346:	82 e0       	ldi	r24, 0x02	; 2
 348:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_SetPinValue>
	
							//
	
		
		DIO_SetPinValue(PORTC,PIN4,GetBIT(Data,0));
 34c:	4c 2f       	mov	r20, r28
 34e:	41 70       	andi	r20, 0x01	; 1
 350:	64 e0       	ldi	r22, 0x04	; 4
 352:	82 e0       	ldi	r24, 0x02	; 2
 354:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_SetPinValue>
		DIO_SetPinValue(PORTC,PIN5,GetBIT(Data,1));
 358:	c1 fb       	bst	r28, 1
 35a:	44 27       	eor	r20, r20
 35c:	40 f9       	bld	r20, 0
 35e:	65 e0       	ldi	r22, 0x05	; 5
 360:	82 e0       	ldi	r24, 0x02	; 2
 362:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_SetPinValue>
		DIO_SetPinValue(PORTC,PIN6,GetBIT(Data,2));
 366:	c2 fb       	bst	r28, 2
 368:	44 27       	eor	r20, r20
 36a:	40 f9       	bld	r20, 0
 36c:	66 e0       	ldi	r22, 0x06	; 6
 36e:	82 e0       	ldi	r24, 0x02	; 2
 370:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_SetPinValue>
		DIO_SetPinValue(PORTC,PIN7,GetBIT(Data,3));
 374:	c3 fb       	bst	r28, 3
 376:	44 27       	eor	r20, r20
 378:	40 f9       	bld	r20, 0
 37a:	67 e0       	ldi	r22, 0x07	; 7
 37c:	82 e0       	ldi	r24, 0x02	; 2
 37e:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_SetPinValue>

							//delay and reading by down Edge
		
							//
							DIO_SetPinValue(PORTC,PIN2,HIGH);
 382:	41 e0       	ldi	r20, 0x01	; 1
 384:	62 e0       	ldi	r22, 0x02	; 2
 386:	82 e0       	ldi	r24, 0x02	; 2
 388:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_SetPinValue>
 38c:	83 ec       	ldi	r24, 0xC3	; 195
 38e:	99 e0       	ldi	r25, 0x09	; 9
 390:	01 97       	sbiw	r24, 0x01	; 1
 392:	f1 f7       	brne	.-4      	; 0x390 <LCD_WriteData+0xb6>
 394:	00 c0       	rjmp	.+0      	; 0x396 <LCD_WriteData+0xbc>
 396:	00 00       	nop
							_delay_ms(1);                       //delay for reading block
							DIO_SetPinValue(PORTC,PIN2,LOW);
 398:	40 e0       	ldi	r20, 0x00	; 0
 39a:	62 e0       	ldi	r22, 0x02	; 2
 39c:	82 e0       	ldi	r24, 0x02	; 2
 39e:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_SetPinValue>
		
							//
	
	
	
}
 3a2:	cf 91       	pop	r28
 3a4:	08 95       	ret

000003a6 <main>:
#include "MCAL/EEPROM/EEPROM.h"
#include "LIB/STD_Types.h"

int main()
{
	 Timer_intialize();
 3a6:	0e 94 01 03 	call	0x602	; 0x602 <Timer_intialize>
	LCD_Intialize();
 3aa:	0e 94 35 01 	call	0x26a	; 0x26a <LCD_Intialize>
	EEPROM_Write(0,'b');
		EEPROM_Write(1,'c');

	 data =EEPROM_Read(1);*/
	uint8 in;
	DIO_SetPortDirection(PORTD,Output);
 3ae:	61 e0       	ldi	r22, 0x01	; 1
 3b0:	83 e0       	ldi	r24, 0x03	; 3
 3b2:	0e 94 14 02 	call	0x428	; 0x428 <DIO_SetPortDirection>
	while(1)
	{
		in=KeyPad();
 3b6:	0e 94 49 00 	call	0x92	; 0x92 <KeyPad>
		if((in!='N'))
 3ba:	8e 34       	cpi	r24, 0x4E	; 78
 3bc:	39 f0       	breq	.+14     	; 0x3cc <main+0x26>
		{
			LCD_WriteData(in);
 3be:	0e 94 6d 01 	call	0x2da	; 0x2da <LCD_WriteData>
			DIO_SetPortValue(PORTD,0xff);
 3c2:	6f ef       	ldi	r22, 0xFF	; 255
 3c4:	83 e0       	ldi	r24, 0x03	; 3
 3c6:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_SetPortValue>
 3ca:	f5 cf       	rjmp	.-22     	; 0x3b6 <main+0x10>
			in='N';
		}
		else
		{
			DIO_SetPortValue(PORTD,0x00);
 3cc:	60 e0       	ldi	r22, 0x00	; 0
 3ce:	83 e0       	ldi	r24, 0x03	; 3
 3d0:	0e 94 3c 02 	call	0x478	; 0x478 <DIO_SetPortValue>
		}

		in-'N';
		
	}
 3d4:	f0 cf       	rjmp	.-32     	; 0x3b6 <main+0x10>

000003d6 <__vector_16>:
 3d6:	1f 92       	push	r1
 3d8:	0f 92       	push	r0
 3da:	0f b6       	in	r0, 0x3f	; 63
 3dc:	0f 92       	push	r0
 3de:	11 24       	eor	r1, r1
 3e0:	2f 93       	push	r18
 3e2:	3f 93       	push	r19
 3e4:	4f 93       	push	r20
 3e6:	5f 93       	push	r21
 3e8:	6f 93       	push	r22
 3ea:	7f 93       	push	r23
 3ec:	8f 93       	push	r24
 3ee:	9f 93       	push	r25
 3f0:	af 93       	push	r26
 3f2:	bf 93       	push	r27
 3f4:	ef 93       	push	r30
 3f6:	ff 93       	push	r31
 3f8:	e0 91 61 00 	lds	r30, 0x0061	; 0x800061 <ADC_CallBackPtr>
 3fc:	f0 91 62 00 	lds	r31, 0x0062	; 0x800062 <ADC_CallBackPtr+0x1>
 400:	30 97       	sbiw	r30, 0x00	; 0
 402:	09 f0       	breq	.+2      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 404:	09 95       	icall
 406:	ff 91       	pop	r31
 408:	ef 91       	pop	r30
 40a:	bf 91       	pop	r27
 40c:	af 91       	pop	r26
 40e:	9f 91       	pop	r25
 410:	8f 91       	pop	r24
 412:	7f 91       	pop	r23
 414:	6f 91       	pop	r22
 416:	5f 91       	pop	r21
 418:	4f 91       	pop	r20
 41a:	3f 91       	pop	r19
 41c:	2f 91       	pop	r18
 41e:	0f 90       	pop	r0
 420:	0f be       	out	0x3f, r0	; 63
 422:	0f 90       	pop	r0
 424:	1f 90       	pop	r1
 426:	18 95       	reti

00000428 <DIO_SetPortDirection>:
 428:	61 30       	cpi	r22, 0x01	; 1
 42a:	a1 f4       	brne	.+40     	; 0x454 <DIO_SetPortDirection+0x2c>
 42c:	81 30       	cpi	r24, 0x01	; 1
 42e:	49 f0       	breq	.+18     	; 0x442 <DIO_SetPortDirection+0x1a>
 430:	28 f0       	brcs	.+10     	; 0x43c <DIO_SetPortDirection+0x14>
 432:	82 30       	cpi	r24, 0x02	; 2
 434:	49 f0       	breq	.+18     	; 0x448 <DIO_SetPortDirection+0x20>
 436:	83 30       	cpi	r24, 0x03	; 3
 438:	51 f0       	breq	.+20     	; 0x44e <DIO_SetPortDirection+0x26>
 43a:	08 95       	ret
 43c:	8f ef       	ldi	r24, 0xFF	; 255
 43e:	8a bb       	out	0x1a, r24	; 26
 440:	08 95       	ret
 442:	8f ef       	ldi	r24, 0xFF	; 255
 444:	87 bb       	out	0x17, r24	; 23
 446:	08 95       	ret
 448:	8f ef       	ldi	r24, 0xFF	; 255
 44a:	84 bb       	out	0x14, r24	; 20
 44c:	08 95       	ret
 44e:	8f ef       	ldi	r24, 0xFF	; 255
 450:	81 bb       	out	0x11, r24	; 17
 452:	08 95       	ret
 454:	61 11       	cpse	r22, r1
 456:	0f c0       	rjmp	.+30     	; 0x476 <DIO_SetPortDirection+0x4e>
 458:	81 30       	cpi	r24, 0x01	; 1
 45a:	41 f0       	breq	.+16     	; 0x46c <DIO_SetPortDirection+0x44>
 45c:	28 f0       	brcs	.+10     	; 0x468 <DIO_SetPortDirection+0x40>
 45e:	82 30       	cpi	r24, 0x02	; 2
 460:	39 f0       	breq	.+14     	; 0x470 <DIO_SetPortDirection+0x48>
 462:	83 30       	cpi	r24, 0x03	; 3
 464:	39 f0       	breq	.+14     	; 0x474 <DIO_SetPortDirection+0x4c>
 466:	08 95       	ret
 468:	1a ba       	out	0x1a, r1	; 26
 46a:	08 95       	ret
 46c:	17 ba       	out	0x17, r1	; 23
 46e:	08 95       	ret
 470:	14 ba       	out	0x14, r1	; 20
 472:	08 95       	ret
 474:	11 ba       	out	0x11, r1	; 17
 476:	08 95       	ret

00000478 <DIO_SetPortValue>:
 478:	81 30       	cpi	r24, 0x01	; 1
 47a:	41 f0       	breq	.+16     	; 0x48c <DIO_SetPortValue+0x14>
 47c:	28 f0       	brcs	.+10     	; 0x488 <DIO_SetPortValue+0x10>
 47e:	82 30       	cpi	r24, 0x02	; 2
 480:	39 f0       	breq	.+14     	; 0x490 <DIO_SetPortValue+0x18>
 482:	83 30       	cpi	r24, 0x03	; 3
 484:	39 f0       	breq	.+14     	; 0x494 <DIO_SetPortValue+0x1c>
 486:	08 95       	ret
 488:	6b bb       	out	0x1b, r22	; 27
 48a:	08 95       	ret
 48c:	68 bb       	out	0x18, r22	; 24
 48e:	08 95       	ret
 490:	65 bb       	out	0x15, r22	; 21
 492:	08 95       	ret
 494:	62 bb       	out	0x12, r22	; 18
 496:	08 95       	ret

00000498 <DIO_SetPinValue>:
 498:	41 30       	cpi	r20, 0x01	; 1
 49a:	a1 f5       	brne	.+104    	; 0x504 <DIO_SetPinValue+0x6c>
 49c:	81 30       	cpi	r24, 0x01	; 1
 49e:	89 f0       	breq	.+34     	; 0x4c2 <DIO_SetPinValue+0x2a>
 4a0:	28 f0       	brcs	.+10     	; 0x4ac <DIO_SetPinValue+0x14>
 4a2:	82 30       	cpi	r24, 0x02	; 2
 4a4:	c9 f0       	breq	.+50     	; 0x4d8 <DIO_SetPinValue+0x40>
 4a6:	83 30       	cpi	r24, 0x03	; 3
 4a8:	11 f1       	breq	.+68     	; 0x4ee <DIO_SetPinValue+0x56>
 4aa:	08 95       	ret
 4ac:	2b b3       	in	r18, 0x1b	; 27
 4ae:	81 e0       	ldi	r24, 0x01	; 1
 4b0:	90 e0       	ldi	r25, 0x00	; 0
 4b2:	02 c0       	rjmp	.+4      	; 0x4b8 <DIO_SetPinValue+0x20>
 4b4:	88 0f       	add	r24, r24
 4b6:	99 1f       	adc	r25, r25
 4b8:	6a 95       	dec	r22
 4ba:	e2 f7       	brpl	.-8      	; 0x4b4 <DIO_SetPinValue+0x1c>
 4bc:	82 2b       	or	r24, r18
 4be:	8b bb       	out	0x1b, r24	; 27
 4c0:	08 95       	ret
 4c2:	28 b3       	in	r18, 0x18	; 24
 4c4:	81 e0       	ldi	r24, 0x01	; 1
 4c6:	90 e0       	ldi	r25, 0x00	; 0
 4c8:	02 c0       	rjmp	.+4      	; 0x4ce <DIO_SetPinValue+0x36>
 4ca:	88 0f       	add	r24, r24
 4cc:	99 1f       	adc	r25, r25
 4ce:	6a 95       	dec	r22
 4d0:	e2 f7       	brpl	.-8      	; 0x4ca <DIO_SetPinValue+0x32>
 4d2:	82 2b       	or	r24, r18
 4d4:	88 bb       	out	0x18, r24	; 24
 4d6:	08 95       	ret
 4d8:	25 b3       	in	r18, 0x15	; 21
 4da:	81 e0       	ldi	r24, 0x01	; 1
 4dc:	90 e0       	ldi	r25, 0x00	; 0
 4de:	02 c0       	rjmp	.+4      	; 0x4e4 <DIO_SetPinValue+0x4c>
 4e0:	88 0f       	add	r24, r24
 4e2:	99 1f       	adc	r25, r25
 4e4:	6a 95       	dec	r22
 4e6:	e2 f7       	brpl	.-8      	; 0x4e0 <DIO_SetPinValue+0x48>
 4e8:	82 2b       	or	r24, r18
 4ea:	85 bb       	out	0x15, r24	; 21
 4ec:	08 95       	ret
 4ee:	22 b3       	in	r18, 0x12	; 18
 4f0:	81 e0       	ldi	r24, 0x01	; 1
 4f2:	90 e0       	ldi	r25, 0x00	; 0
 4f4:	02 c0       	rjmp	.+4      	; 0x4fa <DIO_SetPinValue+0x62>
 4f6:	88 0f       	add	r24, r24
 4f8:	99 1f       	adc	r25, r25
 4fa:	6a 95       	dec	r22
 4fc:	e2 f7       	brpl	.-8      	; 0x4f6 <DIO_SetPinValue+0x5e>
 4fe:	82 2b       	or	r24, r18
 500:	82 bb       	out	0x12, r24	; 18
 502:	08 95       	ret
 504:	41 11       	cpse	r20, r1
 506:	37 c0       	rjmp	.+110    	; 0x576 <DIO_SetPinValue+0xde>
 508:	81 30       	cpi	r24, 0x01	; 1
 50a:	91 f0       	breq	.+36     	; 0x530 <DIO_SetPinValue+0x98>
 50c:	28 f0       	brcs	.+10     	; 0x518 <DIO_SetPinValue+0x80>
 50e:	82 30       	cpi	r24, 0x02	; 2
 510:	d9 f0       	breq	.+54     	; 0x548 <DIO_SetPinValue+0xb0>
 512:	83 30       	cpi	r24, 0x03	; 3
 514:	29 f1       	breq	.+74     	; 0x560 <DIO_SetPinValue+0xc8>
 516:	08 95       	ret
 518:	2b b3       	in	r18, 0x1b	; 27
 51a:	81 e0       	ldi	r24, 0x01	; 1
 51c:	90 e0       	ldi	r25, 0x00	; 0
 51e:	02 c0       	rjmp	.+4      	; 0x524 <DIO_SetPinValue+0x8c>
 520:	88 0f       	add	r24, r24
 522:	99 1f       	adc	r25, r25
 524:	6a 95       	dec	r22
 526:	e2 f7       	brpl	.-8      	; 0x520 <DIO_SetPinValue+0x88>
 528:	80 95       	com	r24
 52a:	82 23       	and	r24, r18
 52c:	8b bb       	out	0x1b, r24	; 27
 52e:	08 95       	ret
 530:	28 b3       	in	r18, 0x18	; 24
 532:	81 e0       	ldi	r24, 0x01	; 1
 534:	90 e0       	ldi	r25, 0x00	; 0
 536:	02 c0       	rjmp	.+4      	; 0x53c <DIO_SetPinValue+0xa4>
 538:	88 0f       	add	r24, r24
 53a:	99 1f       	adc	r25, r25
 53c:	6a 95       	dec	r22
 53e:	e2 f7       	brpl	.-8      	; 0x538 <DIO_SetPinValue+0xa0>
 540:	80 95       	com	r24
 542:	82 23       	and	r24, r18
 544:	88 bb       	out	0x18, r24	; 24
 546:	08 95       	ret
 548:	25 b3       	in	r18, 0x15	; 21
 54a:	81 e0       	ldi	r24, 0x01	; 1
 54c:	90 e0       	ldi	r25, 0x00	; 0
 54e:	02 c0       	rjmp	.+4      	; 0x554 <DIO_SetPinValue+0xbc>
 550:	88 0f       	add	r24, r24
 552:	99 1f       	adc	r25, r25
 554:	6a 95       	dec	r22
 556:	e2 f7       	brpl	.-8      	; 0x550 <DIO_SetPinValue+0xb8>
 558:	80 95       	com	r24
 55a:	82 23       	and	r24, r18
 55c:	85 bb       	out	0x15, r24	; 21
 55e:	08 95       	ret
 560:	22 b3       	in	r18, 0x12	; 18
 562:	81 e0       	ldi	r24, 0x01	; 1
 564:	90 e0       	ldi	r25, 0x00	; 0
 566:	02 c0       	rjmp	.+4      	; 0x56c <DIO_SetPinValue+0xd4>
 568:	88 0f       	add	r24, r24
 56a:	99 1f       	adc	r25, r25
 56c:	6a 95       	dec	r22
 56e:	e2 f7       	brpl	.-8      	; 0x568 <DIO_SetPinValue+0xd0>
 570:	80 95       	com	r24
 572:	82 23       	and	r24, r18
 574:	82 bb       	out	0x12, r24	; 18
 576:	08 95       	ret

00000578 <__vector_1>:
 578:	1f 92       	push	r1
 57a:	0f 92       	push	r0
 57c:	0f b6       	in	r0, 0x3f	; 63
 57e:	0f 92       	push	r0
 580:	11 24       	eor	r1, r1
 582:	2f 93       	push	r18
 584:	3f 93       	push	r19
 586:	4f 93       	push	r20
 588:	5f 93       	push	r21
 58a:	6f 93       	push	r22
 58c:	7f 93       	push	r23
 58e:	8f 93       	push	r24
 590:	9f 93       	push	r25
 592:	af 93       	push	r26
 594:	bf 93       	push	r27
 596:	ef 93       	push	r30
 598:	ff 93       	push	r31
 59a:	e0 91 63 00 	lds	r30, 0x0063	; 0x800063 <EXTI_CallBackPtr>
 59e:	f0 91 64 00 	lds	r31, 0x0064	; 0x800064 <EXTI_CallBackPtr+0x1>
 5a2:	30 97       	sbiw	r30, 0x00	; 0
 5a4:	09 f0       	breq	.+2      	; 0x5a8 <__vector_1+0x30>
 5a6:	09 95       	icall
 5a8:	ff 91       	pop	r31
 5aa:	ef 91       	pop	r30
 5ac:	bf 91       	pop	r27
 5ae:	af 91       	pop	r26
 5b0:	9f 91       	pop	r25
 5b2:	8f 91       	pop	r24
 5b4:	7f 91       	pop	r23
 5b6:	6f 91       	pop	r22
 5b8:	5f 91       	pop	r21
 5ba:	4f 91       	pop	r20
 5bc:	3f 91       	pop	r19
 5be:	2f 91       	pop	r18
 5c0:	0f 90       	pop	r0
 5c2:	0f be       	out	0x3f, r0	; 63
 5c4:	0f 90       	pop	r0
 5c6:	1f 90       	pop	r1
 5c8:	18 95       	reti

000005ca <TIMER0_ISR>:
 5ca:	20 e0       	ldi	r18, 0x00	; 0
 5cc:	30 e0       	ldi	r19, 0x00	; 0
 5ce:	40 e8       	ldi	r20, 0x80	; 128
 5d0:	5f e3       	ldi	r21, 0x3F	; 63
 5d2:	60 91 67 00 	lds	r22, 0x0067	; 0x800067 <overflow>
 5d6:	70 91 68 00 	lds	r23, 0x0068	; 0x800068 <overflow+0x1>
 5da:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <overflow+0x2>
 5de:	90 91 6a 00 	lds	r25, 0x006A	; 0x80006a <overflow+0x3>
 5e2:	0e 94 3e 03 	call	0x67c	; 0x67c <__addsf3>
 5e6:	60 93 67 00 	sts	0x0067, r22	; 0x800067 <overflow>
 5ea:	70 93 68 00 	sts	0x0068, r23	; 0x800068 <overflow+0x1>
 5ee:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <overflow+0x2>
 5f2:	90 93 6a 00 	sts	0x006A, r25	; 0x80006a <overflow+0x3>
 5f6:	08 95       	ret

000005f8 <TIMER_SetCallback>:
 5f8:	90 93 66 00 	sts	0x0066, r25	; 0x800066 <Timer_CallBackPtr+0x1>
 5fc:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <Timer_CallBackPtr>
 600:	08 95       	ret

00000602 <Timer_intialize>:
 602:	12 be       	out	0x32, r1	; 50
 604:	83 b7       	in	r24, 0x33	; 51
 606:	87 7b       	andi	r24, 0xB7	; 183
 608:	83 bf       	out	0x33, r24	; 51
 60a:	83 b7       	in	r24, 0x33	; 51
 60c:	83 bf       	out	0x33, r24	; 51
 60e:	89 b7       	in	r24, 0x39	; 57
 610:	8c 7f       	andi	r24, 0xFC	; 252
 612:	89 bf       	out	0x39, r24	; 57
 614:	89 b7       	in	r24, 0x39	; 57
 616:	81 60       	ori	r24, 0x01	; 1
 618:	89 bf       	out	0x39, r24	; 57
 61a:	89 b7       	in	r24, 0x39	; 57
 61c:	89 bf       	out	0x39, r24	; 57
 61e:	85 ee       	ldi	r24, 0xE5	; 229
 620:	92 e0       	ldi	r25, 0x02	; 2
 622:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <TIMER_SetCallback>
 626:	08 95       	ret

00000628 <__vector_11>:
 628:	1f 92       	push	r1
 62a:	0f 92       	push	r0
 62c:	0f b6       	in	r0, 0x3f	; 63
 62e:	0f 92       	push	r0
 630:	11 24       	eor	r1, r1
 632:	2f 93       	push	r18
 634:	3f 93       	push	r19
 636:	4f 93       	push	r20
 638:	5f 93       	push	r21
 63a:	6f 93       	push	r22
 63c:	7f 93       	push	r23
 63e:	8f 93       	push	r24
 640:	9f 93       	push	r25
 642:	af 93       	push	r26
 644:	bf 93       	push	r27
 646:	ef 93       	push	r30
 648:	ff 93       	push	r31
 64a:	e0 91 65 00 	lds	r30, 0x0065	; 0x800065 <Timer_CallBackPtr>
 64e:	f0 91 66 00 	lds	r31, 0x0066	; 0x800066 <Timer_CallBackPtr+0x1>
 652:	30 97       	sbiw	r30, 0x00	; 0
 654:	09 f0       	breq	.+2      	; 0x658 <__vector_11+0x30>
 656:	09 95       	icall
 658:	ff 91       	pop	r31
 65a:	ef 91       	pop	r30
 65c:	bf 91       	pop	r27
 65e:	af 91       	pop	r26
 660:	9f 91       	pop	r25
 662:	8f 91       	pop	r24
 664:	7f 91       	pop	r23
 666:	6f 91       	pop	r22
 668:	5f 91       	pop	r21
 66a:	4f 91       	pop	r20
 66c:	3f 91       	pop	r19
 66e:	2f 91       	pop	r18
 670:	0f 90       	pop	r0
 672:	0f be       	out	0x3f, r0	; 63
 674:	0f 90       	pop	r0
 676:	1f 90       	pop	r1
 678:	18 95       	reti

0000067a <__subsf3>:
 67a:	50 58       	subi	r21, 0x80	; 128

0000067c <__addsf3>:
 67c:	bb 27       	eor	r27, r27
 67e:	aa 27       	eor	r26, r26
 680:	0e 94 55 03 	call	0x6aa	; 0x6aa <__addsf3x>
 684:	0c 94 c1 03 	jmp	0x782	; 0x782 <__fp_round>
 688:	0e 94 b3 03 	call	0x766	; 0x766 <__fp_pscA>
 68c:	38 f0       	brcs	.+14     	; 0x69c <__addsf3+0x20>
 68e:	0e 94 ba 03 	call	0x774	; 0x774 <__fp_pscB>
 692:	20 f0       	brcs	.+8      	; 0x69c <__addsf3+0x20>
 694:	39 f4       	brne	.+14     	; 0x6a4 <__addsf3+0x28>
 696:	9f 3f       	cpi	r25, 0xFF	; 255
 698:	19 f4       	brne	.+6      	; 0x6a0 <__addsf3+0x24>
 69a:	26 f4       	brtc	.+8      	; 0x6a4 <__addsf3+0x28>
 69c:	0c 94 b0 03 	jmp	0x760	; 0x760 <__fp_nan>
 6a0:	0e f4       	brtc	.+2      	; 0x6a4 <__addsf3+0x28>
 6a2:	e0 95       	com	r30
 6a4:	e7 fb       	bst	r30, 7
 6a6:	0c 94 aa 03 	jmp	0x754	; 0x754 <__fp_inf>

000006aa <__addsf3x>:
 6aa:	e9 2f       	mov	r30, r25
 6ac:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <__fp_split3>
 6b0:	58 f3       	brcs	.-42     	; 0x688 <__addsf3+0xc>
 6b2:	ba 17       	cp	r27, r26
 6b4:	62 07       	cpc	r22, r18
 6b6:	73 07       	cpc	r23, r19
 6b8:	84 07       	cpc	r24, r20
 6ba:	95 07       	cpc	r25, r21
 6bc:	20 f0       	brcs	.+8      	; 0x6c6 <__addsf3x+0x1c>
 6be:	79 f4       	brne	.+30     	; 0x6de <__addsf3x+0x34>
 6c0:	a6 f5       	brtc	.+104    	; 0x72a <__addsf3x+0x80>
 6c2:	0c 94 f4 03 	jmp	0x7e8	; 0x7e8 <__fp_zero>
 6c6:	0e f4       	brtc	.+2      	; 0x6ca <__addsf3x+0x20>
 6c8:	e0 95       	com	r30
 6ca:	0b 2e       	mov	r0, r27
 6cc:	ba 2f       	mov	r27, r26
 6ce:	a0 2d       	mov	r26, r0
 6d0:	0b 01       	movw	r0, r22
 6d2:	b9 01       	movw	r22, r18
 6d4:	90 01       	movw	r18, r0
 6d6:	0c 01       	movw	r0, r24
 6d8:	ca 01       	movw	r24, r20
 6da:	a0 01       	movw	r20, r0
 6dc:	11 24       	eor	r1, r1
 6de:	ff 27       	eor	r31, r31
 6e0:	59 1b       	sub	r21, r25
 6e2:	99 f0       	breq	.+38     	; 0x70a <__addsf3x+0x60>
 6e4:	59 3f       	cpi	r21, 0xF9	; 249
 6e6:	50 f4       	brcc	.+20     	; 0x6fc <__addsf3x+0x52>
 6e8:	50 3e       	cpi	r21, 0xE0	; 224
 6ea:	68 f1       	brcs	.+90     	; 0x746 <__addsf3x+0x9c>
 6ec:	1a 16       	cp	r1, r26
 6ee:	f0 40       	sbci	r31, 0x00	; 0
 6f0:	a2 2f       	mov	r26, r18
 6f2:	23 2f       	mov	r18, r19
 6f4:	34 2f       	mov	r19, r20
 6f6:	44 27       	eor	r20, r20
 6f8:	58 5f       	subi	r21, 0xF8	; 248
 6fa:	f3 cf       	rjmp	.-26     	; 0x6e2 <__addsf3x+0x38>
 6fc:	46 95       	lsr	r20
 6fe:	37 95       	ror	r19
 700:	27 95       	ror	r18
 702:	a7 95       	ror	r26
 704:	f0 40       	sbci	r31, 0x00	; 0
 706:	53 95       	inc	r21
 708:	c9 f7       	brne	.-14     	; 0x6fc <__addsf3x+0x52>
 70a:	7e f4       	brtc	.+30     	; 0x72a <__addsf3x+0x80>
 70c:	1f 16       	cp	r1, r31
 70e:	ba 0b       	sbc	r27, r26
 710:	62 0b       	sbc	r22, r18
 712:	73 0b       	sbc	r23, r19
 714:	84 0b       	sbc	r24, r20
 716:	ba f0       	brmi	.+46     	; 0x746 <__addsf3x+0x9c>
 718:	91 50       	subi	r25, 0x01	; 1
 71a:	a1 f0       	breq	.+40     	; 0x744 <__addsf3x+0x9a>
 71c:	ff 0f       	add	r31, r31
 71e:	bb 1f       	adc	r27, r27
 720:	66 1f       	adc	r22, r22
 722:	77 1f       	adc	r23, r23
 724:	88 1f       	adc	r24, r24
 726:	c2 f7       	brpl	.-16     	; 0x718 <__addsf3x+0x6e>
 728:	0e c0       	rjmp	.+28     	; 0x746 <__addsf3x+0x9c>
 72a:	ba 0f       	add	r27, r26
 72c:	62 1f       	adc	r22, r18
 72e:	73 1f       	adc	r23, r19
 730:	84 1f       	adc	r24, r20
 732:	48 f4       	brcc	.+18     	; 0x746 <__addsf3x+0x9c>
 734:	87 95       	ror	r24
 736:	77 95       	ror	r23
 738:	67 95       	ror	r22
 73a:	b7 95       	ror	r27
 73c:	f7 95       	ror	r31
 73e:	9e 3f       	cpi	r25, 0xFE	; 254
 740:	08 f0       	brcs	.+2      	; 0x744 <__addsf3x+0x9a>
 742:	b0 cf       	rjmp	.-160    	; 0x6a4 <__addsf3+0x28>
 744:	93 95       	inc	r25
 746:	88 0f       	add	r24, r24
 748:	08 f0       	brcs	.+2      	; 0x74c <__addsf3x+0xa2>
 74a:	99 27       	eor	r25, r25
 74c:	ee 0f       	add	r30, r30
 74e:	97 95       	ror	r25
 750:	87 95       	ror	r24
 752:	08 95       	ret

00000754 <__fp_inf>:
 754:	97 f9       	bld	r25, 7
 756:	9f 67       	ori	r25, 0x7F	; 127
 758:	80 e8       	ldi	r24, 0x80	; 128
 75a:	70 e0       	ldi	r23, 0x00	; 0
 75c:	60 e0       	ldi	r22, 0x00	; 0
 75e:	08 95       	ret

00000760 <__fp_nan>:
 760:	9f ef       	ldi	r25, 0xFF	; 255
 762:	80 ec       	ldi	r24, 0xC0	; 192
 764:	08 95       	ret

00000766 <__fp_pscA>:
 766:	00 24       	eor	r0, r0
 768:	0a 94       	dec	r0
 76a:	16 16       	cp	r1, r22
 76c:	17 06       	cpc	r1, r23
 76e:	18 06       	cpc	r1, r24
 770:	09 06       	cpc	r0, r25
 772:	08 95       	ret

00000774 <__fp_pscB>:
 774:	00 24       	eor	r0, r0
 776:	0a 94       	dec	r0
 778:	12 16       	cp	r1, r18
 77a:	13 06       	cpc	r1, r19
 77c:	14 06       	cpc	r1, r20
 77e:	05 06       	cpc	r0, r21
 780:	08 95       	ret

00000782 <__fp_round>:
 782:	09 2e       	mov	r0, r25
 784:	03 94       	inc	r0
 786:	00 0c       	add	r0, r0
 788:	11 f4       	brne	.+4      	; 0x78e <__fp_round+0xc>
 78a:	88 23       	and	r24, r24
 78c:	52 f0       	brmi	.+20     	; 0x7a2 <__fp_round+0x20>
 78e:	bb 0f       	add	r27, r27
 790:	40 f4       	brcc	.+16     	; 0x7a2 <__fp_round+0x20>
 792:	bf 2b       	or	r27, r31
 794:	11 f4       	brne	.+4      	; 0x79a <__fp_round+0x18>
 796:	60 ff       	sbrs	r22, 0
 798:	04 c0       	rjmp	.+8      	; 0x7a2 <__fp_round+0x20>
 79a:	6f 5f       	subi	r22, 0xFF	; 255
 79c:	7f 4f       	sbci	r23, 0xFF	; 255
 79e:	8f 4f       	sbci	r24, 0xFF	; 255
 7a0:	9f 4f       	sbci	r25, 0xFF	; 255
 7a2:	08 95       	ret

000007a4 <__fp_split3>:
 7a4:	57 fd       	sbrc	r21, 7
 7a6:	90 58       	subi	r25, 0x80	; 128
 7a8:	44 0f       	add	r20, r20
 7aa:	55 1f       	adc	r21, r21
 7ac:	59 f0       	breq	.+22     	; 0x7c4 <__fp_splitA+0x10>
 7ae:	5f 3f       	cpi	r21, 0xFF	; 255
 7b0:	71 f0       	breq	.+28     	; 0x7ce <__fp_splitA+0x1a>
 7b2:	47 95       	ror	r20

000007b4 <__fp_splitA>:
 7b4:	88 0f       	add	r24, r24
 7b6:	97 fb       	bst	r25, 7
 7b8:	99 1f       	adc	r25, r25
 7ba:	61 f0       	breq	.+24     	; 0x7d4 <__fp_splitA+0x20>
 7bc:	9f 3f       	cpi	r25, 0xFF	; 255
 7be:	79 f0       	breq	.+30     	; 0x7de <__fp_splitA+0x2a>
 7c0:	87 95       	ror	r24
 7c2:	08 95       	ret
 7c4:	12 16       	cp	r1, r18
 7c6:	13 06       	cpc	r1, r19
 7c8:	14 06       	cpc	r1, r20
 7ca:	55 1f       	adc	r21, r21
 7cc:	f2 cf       	rjmp	.-28     	; 0x7b2 <__fp_split3+0xe>
 7ce:	46 95       	lsr	r20
 7d0:	f1 df       	rcall	.-30     	; 0x7b4 <__fp_splitA>
 7d2:	08 c0       	rjmp	.+16     	; 0x7e4 <__fp_splitA+0x30>
 7d4:	16 16       	cp	r1, r22
 7d6:	17 06       	cpc	r1, r23
 7d8:	18 06       	cpc	r1, r24
 7da:	99 1f       	adc	r25, r25
 7dc:	f1 cf       	rjmp	.-30     	; 0x7c0 <__fp_splitA+0xc>
 7de:	86 95       	lsr	r24
 7e0:	71 05       	cpc	r23, r1
 7e2:	61 05       	cpc	r22, r1
 7e4:	08 94       	sec
 7e6:	08 95       	ret

000007e8 <__fp_zero>:
 7e8:	e8 94       	clt

000007ea <__fp_szero>:
 7ea:	bb 27       	eor	r27, r27
 7ec:	66 27       	eor	r22, r22
 7ee:	77 27       	eor	r23, r23
 7f0:	cb 01       	movw	r24, r22
 7f2:	97 f9       	bld	r25, 7
 7f4:	08 95       	ret

000007f6 <_exit>:
 7f6:	f8 94       	cli

000007f8 <__stop_program>:
 7f8:	ff cf       	rjmp	.-2      	; 0x7f8 <__stop_program>
